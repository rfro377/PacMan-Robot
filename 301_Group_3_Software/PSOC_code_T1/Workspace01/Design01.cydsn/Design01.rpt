Loading plugins phase: Elapsed time ==> 0s.215ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -d CY8C5888LTI-LP097 -s H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.363ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.121ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Design01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 Design01.v -verilog
======================================================================

======================================================================
Compiling:  Design01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 Design01.v -verilog
======================================================================

======================================================================
Compiling:  Design01.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu Oct 10 14:43:48 2019


======================================================================
Compiling:  Design01.v
Program  :   vpp
Options  :    -yv2 -q10 Design01.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu Oct 10 14:43:48 2019

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Timer_v2_70\B_Timer_v2_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Design01.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Timer_v2_70\B_Timer_v2_70.v (line 368, col 46):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Timer_v2_70\B_Timer_v2_70.v (line 374, col 62):  Note: Substituting module 'add_vv_vv' for '+'.
Design01.v (line 1503, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Design01.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu Oct 10 14:43:49 2019

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\codegentemp\Design01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\codegentemp\Design01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Timer_v2_70\B_Timer_v2_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  Design01.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 -verilog Design01.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu Oct 10 14:43:50 2019

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\codegentemp\Design01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\codegentemp\Design01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Timer_v2_70\B_Timer_v2_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\PWM_1:PWMUDB:km_run\
	\PWM_1:PWMUDB:ctrl_cmpmode2_2\
	\PWM_1:PWMUDB:ctrl_cmpmode2_1\
	\PWM_1:PWMUDB:ctrl_cmpmode2_0\
	\PWM_1:PWMUDB:ctrl_cmpmode1_2\
	\PWM_1:PWMUDB:ctrl_cmpmode1_1\
	\PWM_1:PWMUDB:ctrl_cmpmode1_0\
	\PWM_1:PWMUDB:capt_rising\
	\PWM_1:PWMUDB:capt_falling\
	\PWM_1:PWMUDB:trig_rise\
	\PWM_1:PWMUDB:trig_fall\
	\PWM_1:PWMUDB:sc_kill\
	\PWM_1:PWMUDB:min_kill\
	\PWM_1:PWMUDB:km_tc\
	\PWM_1:PWMUDB:db_tc\
	\PWM_1:PWMUDB:dith_sel\
	\PWM_1:Net_101\
	\PWM_1:Net_96\
	\PWM_1:PWMUDB:MODULE_2:b_31\
	\PWM_1:PWMUDB:MODULE_2:b_30\
	\PWM_1:PWMUDB:MODULE_2:b_29\
	\PWM_1:PWMUDB:MODULE_2:b_28\
	\PWM_1:PWMUDB:MODULE_2:b_27\
	\PWM_1:PWMUDB:MODULE_2:b_26\
	\PWM_1:PWMUDB:MODULE_2:b_25\
	\PWM_1:PWMUDB:MODULE_2:b_24\
	\PWM_1:PWMUDB:MODULE_2:b_23\
	\PWM_1:PWMUDB:MODULE_2:b_22\
	\PWM_1:PWMUDB:MODULE_2:b_21\
	\PWM_1:PWMUDB:MODULE_2:b_20\
	\PWM_1:PWMUDB:MODULE_2:b_19\
	\PWM_1:PWMUDB:MODULE_2:b_18\
	\PWM_1:PWMUDB:MODULE_2:b_17\
	\PWM_1:PWMUDB:MODULE_2:b_16\
	\PWM_1:PWMUDB:MODULE_2:b_15\
	\PWM_1:PWMUDB:MODULE_2:b_14\
	\PWM_1:PWMUDB:MODULE_2:b_13\
	\PWM_1:PWMUDB:MODULE_2:b_12\
	\PWM_1:PWMUDB:MODULE_2:b_11\
	\PWM_1:PWMUDB:MODULE_2:b_10\
	\PWM_1:PWMUDB:MODULE_2:b_9\
	\PWM_1:PWMUDB:MODULE_2:b_8\
	\PWM_1:PWMUDB:MODULE_2:b_7\
	\PWM_1:PWMUDB:MODULE_2:b_6\
	\PWM_1:PWMUDB:MODULE_2:b_5\
	\PWM_1:PWMUDB:MODULE_2:b_4\
	\PWM_1:PWMUDB:MODULE_2:b_3\
	\PWM_1:PWMUDB:MODULE_2:b_2\
	\PWM_1:PWMUDB:MODULE_2:b_1\
	\PWM_1:PWMUDB:MODULE_2:b_0\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_31\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_30\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_29\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_28\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_27\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_26\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_25\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:a_24\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_31\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_30\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_29\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_28\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_27\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_26\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_25\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_24\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_23\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_22\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_21\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_20\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_19\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_18\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_17\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_16\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_15\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_14\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_13\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_12\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_11\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_10\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_9\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_8\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_7\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_6\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_5\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_4\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_3\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_2\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_1\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:b_0\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_31\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_30\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_29\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_28\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_27\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_26\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_25\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_24\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_23\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_22\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_21\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_20\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_19\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_18\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_17\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_16\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_15\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_14\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_13\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_12\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_11\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_10\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_9\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_8\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_7\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_6\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_5\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_4\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_3\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:s_2\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_226
	Net_544
	Net_541
	\PWM_1:Net_113\
	\PWM_1:Net_107\
	\PWM_1:Net_114\
	\PWM_2:PWMUDB:km_run\
	\PWM_2:PWMUDB:ctrl_cmpmode2_2\
	\PWM_2:PWMUDB:ctrl_cmpmode2_1\
	\PWM_2:PWMUDB:ctrl_cmpmode2_0\
	\PWM_2:PWMUDB:ctrl_cmpmode1_2\
	\PWM_2:PWMUDB:ctrl_cmpmode1_1\
	\PWM_2:PWMUDB:ctrl_cmpmode1_0\
	\PWM_2:PWMUDB:capt_rising\
	\PWM_2:PWMUDB:capt_falling\
	\PWM_2:PWMUDB:trig_rise\
	\PWM_2:PWMUDB:trig_fall\
	\PWM_2:PWMUDB:sc_kill\
	\PWM_2:PWMUDB:min_kill\
	\PWM_2:PWMUDB:km_tc\
	\PWM_2:PWMUDB:db_tc\
	\PWM_2:PWMUDB:dith_sel\
	\PWM_2:Net_101\
	\PWM_2:Net_96\
	\PWM_2:PWMUDB:MODULE_3:b_31\
	\PWM_2:PWMUDB:MODULE_3:b_30\
	\PWM_2:PWMUDB:MODULE_3:b_29\
	\PWM_2:PWMUDB:MODULE_3:b_28\
	\PWM_2:PWMUDB:MODULE_3:b_27\
	\PWM_2:PWMUDB:MODULE_3:b_26\
	\PWM_2:PWMUDB:MODULE_3:b_25\
	\PWM_2:PWMUDB:MODULE_3:b_24\
	\PWM_2:PWMUDB:MODULE_3:b_23\
	\PWM_2:PWMUDB:MODULE_3:b_22\
	\PWM_2:PWMUDB:MODULE_3:b_21\
	\PWM_2:PWMUDB:MODULE_3:b_20\
	\PWM_2:PWMUDB:MODULE_3:b_19\
	\PWM_2:PWMUDB:MODULE_3:b_18\
	\PWM_2:PWMUDB:MODULE_3:b_17\
	\PWM_2:PWMUDB:MODULE_3:b_16\
	\PWM_2:PWMUDB:MODULE_3:b_15\
	\PWM_2:PWMUDB:MODULE_3:b_14\
	\PWM_2:PWMUDB:MODULE_3:b_13\
	\PWM_2:PWMUDB:MODULE_3:b_12\
	\PWM_2:PWMUDB:MODULE_3:b_11\
	\PWM_2:PWMUDB:MODULE_3:b_10\
	\PWM_2:PWMUDB:MODULE_3:b_9\
	\PWM_2:PWMUDB:MODULE_3:b_8\
	\PWM_2:PWMUDB:MODULE_3:b_7\
	\PWM_2:PWMUDB:MODULE_3:b_6\
	\PWM_2:PWMUDB:MODULE_3:b_5\
	\PWM_2:PWMUDB:MODULE_3:b_4\
	\PWM_2:PWMUDB:MODULE_3:b_3\
	\PWM_2:PWMUDB:MODULE_3:b_2\
	\PWM_2:PWMUDB:MODULE_3:b_1\
	\PWM_2:PWMUDB:MODULE_3:b_0\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_31\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_30\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_29\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_28\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_27\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_26\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_25\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:a_24\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_31\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_30\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_29\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_28\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_27\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_26\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_25\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_24\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_23\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_22\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_21\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_20\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_19\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_18\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_17\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_16\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_15\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_14\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_13\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_12\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_11\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_10\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_9\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_8\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_7\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_6\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_5\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_4\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_3\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_2\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_1\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:b_0\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_31\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_30\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_29\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_28\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_27\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_26\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_25\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_24\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_23\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_22\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_21\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_20\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_19\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_18\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_17\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_16\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_15\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_14\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_13\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_12\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_11\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_10\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_9\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_8\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_7\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_6\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_5\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_4\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_3\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:s_2\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_4836
	Net_4830
	Net_4829
	\PWM_2:Net_113\
	\PWM_2:Net_107\
	\PWM_2:Net_114\
	\Timer_1:Net_260\
	Net_4826
	\Timer_1:Net_53\
	\Timer_1:TimerUDB:ctrl_ten\
	\Timer_1:TimerUDB:ctrl_cmode_0\
	\Timer_1:TimerUDB:ctrl_tmode_1\
	\Timer_1:TimerUDB:ctrl_tmode_0\
	\Timer_1:TimerUDB:ctrl_ic_1\
	\Timer_1:TimerUDB:ctrl_ic_0\
	Net_4825
	\Timer_1:TimerUDB:zeros_3\
	\Timer_1:Net_102\
	\Timer_1:Net_266\
	\QuadDec_1:Net_1123\
	\QuadDec_1:Cnt8:Net_82\
	\QuadDec_1:Cnt8:Net_95\
	\QuadDec_1:Cnt8:Net_91\
	\QuadDec_1:Cnt8:Net_102\
	\QuadDec_1:Cnt8:CounterUDB:ctrl_cmod_2\
	\QuadDec_1:Cnt8:CounterUDB:ctrl_cmod_1\
	\QuadDec_1:Cnt8:CounterUDB:ctrl_cmod_0\
	\QuadDec_2:Net_1123\
	\QuadDec_2:Cnt8:Net_82\
	\QuadDec_2:Cnt8:Net_95\
	\QuadDec_2:Cnt8:Net_91\
	\QuadDec_2:Cnt8:Net_102\
	\QuadDec_2:Cnt8:CounterUDB:ctrl_cmod_2\
	\QuadDec_2:Cnt8:CounterUDB:ctrl_cmod_1\
	\QuadDec_2:Cnt8:CounterUDB:ctrl_cmod_0\
	\ADC_SAR_Seq_1:SAR:Net_221\
	\ADC_SAR_Seq_1:SAR:Net_381\
	\ADC_SAR_Seq_1:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_1:soc_out\
	\ADC_SAR_Seq_1:Net_3905\
	\ADC_SAR_Seq_1:Net_3867\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq_1:MODULE_1:lt\
	\ADC_SAR_Seq_1:MODULE_1:gt\
	\ADC_SAR_Seq_1:MODULE_1:gte\
	\ADC_SAR_Seq_1:MODULE_1:lte\
	\ADC_SAR_Seq_1:MODULE_1:neq\
	\UART_1:BUART:tx_hd_send_break\
	\UART_1:BUART:tx_ctrl_mark\
	\UART_1:BUART:reset_sr\
	Net_6574
	Net_6579
	\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:b_1\
	\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:b_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:gta_0\
	Net_6575
	\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:albi_1\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:agbi_1\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:lt_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:gt_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:lti_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:gti_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:albi_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:agbi_0\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:xeq\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:xlt\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:xlte\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:xgt\
	\UART_1:BUART:sRX:MODULE_8:g1:a0:xgte\
	\UART_1:BUART:sRX:MODULE_8:lt\
	\UART_1:BUART:sRX:MODULE_8:eq\
	\UART_1:BUART:sRX:MODULE_8:gt\
	\UART_1:BUART:sRX:MODULE_8:gte\
	\UART_1:BUART:sRX:MODULE_8:lte\
	\USBUART:dma_complete_0\
	\USBUART:Net_1922\
	\USBUART:dma_complete_1\
	\USBUART:Net_1921\
	\USBUART:dma_complete_2\
	\USBUART:Net_1920\
	\USBUART:dma_complete_3\
	\USBUART:Net_1919\
	\USBUART:dma_complete_4\
	\USBUART:Net_1918\
	\USBUART:dma_complete_5\
	\USBUART:Net_1917\
	\USBUART:dma_complete_6\
	\USBUART:Net_1916\
	\USBUART:dma_complete_7\
	\USBUART:Net_1915\
	\Timer_2:Net_260\
	Net_6706
	\Timer_2:Net_53\
	\Timer_2:TimerUDB:ctrl_ten\
	\Timer_2:TimerUDB:ctrl_cmode_0\
	\Timer_2:TimerUDB:ctrl_tmode_1\
	\Timer_2:TimerUDB:ctrl_tmode_0\
	\Timer_2:TimerUDB:ctrl_ic_1\
	\Timer_2:TimerUDB:ctrl_ic_0\
	Net_6705
	\Timer_2:Net_102\
	\Timer_2:Net_266\

    Synthesized names
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_31\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_30\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_29\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_28\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_27\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_26\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_25\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_24\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_23\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_22\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_21\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_20\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_19\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_18\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_17\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_16\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_15\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_14\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_13\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_12\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_11\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_10\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_9\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_8\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_7\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_6\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_5\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_4\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_3\
	\PWM_1:PWMUDB:add_vi_vv_MODGEN_2_2\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_31\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_30\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_29\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_28\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_27\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_26\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_25\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_24\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_23\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_22\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_21\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_20\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_19\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_18\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_17\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_16\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_15\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_14\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_13\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_12\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_11\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_10\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_9\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_8\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_7\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_6\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_5\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_4\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_3\
	\PWM_2:PWMUDB:add_vi_vv_MODGEN_3_2\

Deleted 374 User equations/components.
Deleted 60 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__LED_net_0
Aliasing tmpOE__Sensor1_net_0 to tmpOE__LED_net_0
Aliasing \PWM_1:PWMUDB:hwCapture\ to zero
Aliasing \PWM_1:PWMUDB:trig_out\ to tmpOE__LED_net_0
Aliasing \PWM_1:PWMUDB:runmode_enable\\R\ to zero
Aliasing \PWM_1:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_1:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \PWM_1:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_1:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \PWM_1:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_1:PWMUDB:final_kill\ to tmpOE__LED_net_0
Aliasing \PWM_1:PWMUDB:dith_count_1\\R\ to zero
Aliasing \PWM_1:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_1:PWMUDB:dith_count_0\\R\ to zero
Aliasing \PWM_1:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_1:PWMUDB:reset\ to zero
Aliasing \PWM_1:PWMUDB:status_6\ to zero
Aliasing \PWM_1:PWMUDB:status_4\ to zero
Aliasing \PWM_1:PWMUDB:cmp1_status_reg\\R\ to zero
Aliasing \PWM_1:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_1:PWMUDB:cmp2_status_reg\\R\ to zero
Aliasing \PWM_1:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_1:PWMUDB:final_kill_reg\\R\ to zero
Aliasing \PWM_1:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_1:PWMUDB:cs_addr_0\ to zero
Aliasing \PWM_1:PWMUDB:pwm_temp\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LED_net_0
Aliasing tmpOE__PW1_1_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__PW1_2_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__chA1_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__chA2_net_0 to tmpOE__LED_net_0
Aliasing \PWM_2:PWMUDB:hwCapture\ to zero
Aliasing \PWM_2:PWMUDB:trig_out\ to tmpOE__LED_net_0
Aliasing \PWM_2:PWMUDB:runmode_enable\\R\ to zero
Aliasing \PWM_2:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_2:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \PWM_2:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_2:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \PWM_2:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_2:PWMUDB:final_kill\ to tmpOE__LED_net_0
Aliasing \PWM_2:PWMUDB:dith_count_1\\R\ to zero
Aliasing \PWM_2:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_2:PWMUDB:dith_count_0\\R\ to zero
Aliasing \PWM_2:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_2:PWMUDB:reset\ to zero
Aliasing \PWM_2:PWMUDB:status_6\ to zero
Aliasing \PWM_2:PWMUDB:status_4\ to zero
Aliasing \PWM_2:PWMUDB:cmp1_status_reg\\R\ to zero
Aliasing \PWM_2:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_2:PWMUDB:cmp2_status_reg\\R\ to zero
Aliasing \PWM_2:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_2:PWMUDB:final_kill_reg\\R\ to zero
Aliasing \PWM_2:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_2:PWMUDB:cs_addr_0\ to zero
Aliasing \PWM_2:PWMUDB:pwm_temp\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_23\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_22\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_21\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_20\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_19\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_18\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_17\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_16\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_15\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_14\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_13\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_12\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_11\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_10\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_9\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_8\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_7\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_6\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_5\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_4\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_3\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:a_2\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LED_net_0
Aliasing tmpOE__PW2_1_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__PW2_2_net_0 to tmpOE__LED_net_0
Aliasing Net_12 to zero
Aliasing \Timer_1:TimerUDB:ctrl_cmode_1\ to zero
Aliasing \Timer_1:TimerUDB:trigger_enable\ to tmpOE__LED_net_0
Aliasing \Timer_1:TimerUDB:status_6\ to zero
Aliasing \Timer_1:TimerUDB:status_5\ to zero
Aliasing \Timer_1:TimerUDB:status_4\ to zero
Aliasing \Timer_1:TimerUDB:status_0\ to \Timer_1:TimerUDB:tc_i\
Aliasing \QuadDec_1:Cnt8:CounterUDB:ctrl_capmode_1\ to zero
Aliasing \QuadDec_1:Cnt8:CounterUDB:ctrl_capmode_0\ to zero
Aliasing \QuadDec_1:Cnt8:CounterUDB:capt_rising\ to zero
Aliasing \QuadDec_1:Cnt8:CounterUDB:underflow\ to \QuadDec_1:Cnt8:CounterUDB:status_1\
Aliasing \QuadDec_1:Cnt8:CounterUDB:tc_i\ to \QuadDec_1:Cnt8:CounterUDB:reload_tc\
Aliasing \QuadDec_1:bQuadDec:status_4\ to zero
Aliasing \QuadDec_1:bQuadDec:status_5\ to zero
Aliasing \QuadDec_1:bQuadDec:status_6\ to zero
Aliasing \QuadDec_1:Net_1229\ to tmpOE__LED_net_0
Aliasing \QuadDec_2:Cnt8:CounterUDB:ctrl_capmode_1\ to zero
Aliasing \QuadDec_2:Cnt8:CounterUDB:ctrl_capmode_0\ to zero
Aliasing \QuadDec_2:Cnt8:CounterUDB:capt_rising\ to zero
Aliasing \QuadDec_2:Cnt8:CounterUDB:underflow\ to \QuadDec_2:Cnt8:CounterUDB:status_1\
Aliasing \QuadDec_2:Cnt8:CounterUDB:tc_i\ to \QuadDec_2:Cnt8:CounterUDB:reload_tc\
Aliasing \QuadDec_2:bQuadDec:status_4\ to zero
Aliasing \QuadDec_2:bQuadDec:status_5\ to zero
Aliasing \QuadDec_2:bQuadDec:status_6\ to zero
Aliasing \QuadDec_2:Net_1229\ to tmpOE__LED_net_0
Aliasing tmpOE__chB1_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__chB2_net_0 to tmpOE__LED_net_0
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\ to tmpOE__LED_net_0
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:tmpOE__ExtVref_net_0\ to tmpOE__LED_net_0
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_1\ to zero
Aliasing Net_6416 to \ADC_SAR_Seq_1:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_0
Aliasing tmpOE__Sensor2_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__Sensor3_net_0 to tmpOE__LED_net_0
Aliasing \ADC_SAR_1:vp_ctl_0\ to zero
Aliasing \ADC_SAR_1:vp_ctl_2\ to zero
Aliasing \ADC_SAR_1:vn_ctl_1\ to zero
Aliasing \ADC_SAR_1:vn_ctl_3\ to zero
Aliasing \ADC_SAR_1:vp_ctl_1\ to zero
Aliasing \ADC_SAR_1:vp_ctl_3\ to zero
Aliasing \ADC_SAR_1:vn_ctl_0\ to zero
Aliasing \ADC_SAR_1:vn_ctl_2\ to zero
Aliasing \ADC_SAR_1:soc\ to zero
Aliasing \ADC_SAR_1:tmpOE__ExtVref_net_0\ to tmpOE__LED_net_0
Aliasing \ADC_SAR_1:Net_381\ to zero
Aliasing tmpOE__Sensor4_net_0 to tmpOE__LED_net_0
Aliasing tmpOE__Sensor5_net_0 to tmpOE__LED_net_0
Aliasing \UART_1:BUART:HalfDuplexSend\ to zero
Aliasing \UART_1:BUART:FinalParityType_1\ to zero
Aliasing \UART_1:BUART:FinalParityType_0\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_2\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_1\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_0\ to zero
Aliasing \UART_1:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LED_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN6_1\ to \UART_1:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN6_0\ to \UART_1:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ to tmpOE__LED_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN7_1\ to \UART_1:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN7_0\ to \UART_1:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newb_1\ to tmpOE__LED_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:rx_status_1\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_3\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_2\ to tmpOE__LED_net_0
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_1\ to tmpOE__LED_net_0
Aliasing \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_0
Aliasing tmpOE__Rx_1_net_0 to tmpOE__LED_net_0
Aliasing \USBUART:tmpOE__Dm_net_0\ to tmpOE__LED_net_0
Aliasing \USBUART:tmpOE__Dp_net_0\ to tmpOE__LED_net_0
Aliasing \Timer_2:TimerUDB:ctrl_cmode_1\ to zero
Aliasing \Timer_2:TimerUDB:trigger_enable\ to tmpOE__LED_net_0
Aliasing Net_6607 to zero
Aliasing \Timer_2:TimerUDB:status_6\ to zero
Aliasing \Timer_2:TimerUDB:status_5\ to zero
Aliasing \Timer_2:TimerUDB:status_4\ to zero
Aliasing \Timer_2:TimerUDB:status_0\ to \Timer_2:TimerUDB:tc_i\
Aliasing \PWM_1:PWMUDB:min_kill_reg\\D\ to tmpOE__LED_net_0
Aliasing \PWM_1:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_1:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_1:PWMUDB:ltch_kill_reg\\D\ to tmpOE__LED_net_0
Aliasing \PWM_1:PWMUDB:tc_i_reg\\D\ to \PWM_1:PWMUDB:status_2\
Aliasing \PWM_2:PWMUDB:min_kill_reg\\D\ to tmpOE__LED_net_0
Aliasing \PWM_2:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_2:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_2:PWMUDB:ltch_kill_reg\\D\ to tmpOE__LED_net_0
Aliasing \PWM_2:PWMUDB:tc_i_reg\\D\ to \PWM_2:PWMUDB:status_2\
Aliasing \Timer_1:TimerUDB:capture_last\\D\ to zero
Aliasing \Timer_1:TimerUDB:hwEnable_reg\\D\ to \Timer_1:TimerUDB:run_mode\
Aliasing \Timer_1:TimerUDB:capture_out_reg_i\\D\ to \Timer_1:TimerUDB:capt_fifo_load_int\
Aliasing \QuadDec_1:Cnt8:CounterUDB:prevCapture\\D\ to zero
Aliasing \QuadDec_1:Cnt8:CounterUDB:cmp_out_reg_i\\D\ to \QuadDec_1:Cnt8:CounterUDB:prevCompare\\D\
Aliasing \QuadDec_2:Cnt8:CounterUDB:prevCapture\\D\ to zero
Aliasing \QuadDec_2:Cnt8:CounterUDB:cmp_out_reg_i\\D\ to \QuadDec_2:Cnt8:CounterUDB:prevCompare\\D\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_1:MODIN1_5\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_1:MODIN1_4\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_1:MODIN1_3\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_1:MODIN1_2\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_1:MODIN1_1\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_1:MODIN1_0\
Aliasing \UART_1:BUART:reset_reg\\D\ to zero
Aliasing \UART_1:BUART:rx_break_status\\D\ to zero
Aliasing \Timer_2:TimerUDB:capture_last\\D\ to zero
Aliasing \Timer_2:TimerUDB:capture_out_reg_i\\D\ to \Timer_2:TimerUDB:capt_fifo_load_int\
Removing Lhs of wire one[6] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__Sensor1_net_0[9] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:ctrl_enable\[29] = \PWM_1:PWMUDB:control_7\[21]
Removing Lhs of wire \PWM_1:PWMUDB:hwCapture\[39] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:hwEnable\[40] = \PWM_1:PWMUDB:control_7\[21]
Removing Lhs of wire \PWM_1:PWMUDB:trig_out\[44] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:runmode_enable\\R\[46] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:runmode_enable\\S\[47] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:final_enable\[48] = \PWM_1:PWMUDB:runmode_enable\[45]
Removing Lhs of wire \PWM_1:PWMUDB:ltch_kill_reg\\R\[52] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:ltch_kill_reg\\S\[53] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:min_kill_reg\\R\[54] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:min_kill_reg\\S\[55] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:final_kill\[58] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:add_vi_vv_MODGEN_2_1\[62] = \PWM_1:PWMUDB:MODULE_2:g2:a0:s_1\[303]
Removing Lhs of wire \PWM_1:PWMUDB:add_vi_vv_MODGEN_2_0\[64] = \PWM_1:PWMUDB:MODULE_2:g2:a0:s_0\[304]
Removing Lhs of wire \PWM_1:PWMUDB:dith_count_1\\R\[65] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:dith_count_1\\S\[66] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:dith_count_0\\R\[67] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:dith_count_0\\S\[68] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:reset\[71] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:status_6\[72] = zero[2]
Removing Rhs of wire \PWM_1:PWMUDB:status_5\[73] = \PWM_1:PWMUDB:final_kill_reg\[88]
Removing Lhs of wire \PWM_1:PWMUDB:status_4\[74] = zero[2]
Removing Rhs of wire \PWM_1:PWMUDB:status_3\[75] = \PWM_1:PWMUDB:fifo_full\[95]
Removing Rhs of wire \PWM_1:PWMUDB:status_1\[77] = \PWM_1:PWMUDB:cmp2_status_reg\[87]
Removing Rhs of wire \PWM_1:PWMUDB:status_0\[78] = \PWM_1:PWMUDB:cmp1_status_reg\[86]
Removing Lhs of wire \PWM_1:PWMUDB:cmp1_status_reg\\R\[89] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:cmp1_status_reg\\S\[90] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:cmp2_status_reg\\R\[91] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:cmp2_status_reg\\S\[92] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:final_kill_reg\\R\[93] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:final_kill_reg\\S\[94] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:cs_addr_2\[96] = \PWM_1:PWMUDB:tc_i\[50]
Removing Lhs of wire \PWM_1:PWMUDB:cs_addr_1\[97] = \PWM_1:PWMUDB:runmode_enable\[45]
Removing Lhs of wire \PWM_1:PWMUDB:cs_addr_0\[98] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:compare1\[131] = \PWM_1:PWMUDB:cmp1_less\[102]
Removing Lhs of wire \PWM_1:PWMUDB:compare2\[132] = \PWM_1:PWMUDB:cmp2_less\[105]
Removing Rhs of wire Net_1671[142] = \PWM_1:PWMUDB:pwm1_i_reg\[135]
Removing Rhs of wire Net_543[143] = \PWM_1:PWMUDB:pwm2_i_reg\[137]
Removing Lhs of wire \PWM_1:PWMUDB:pwm_temp\[144] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_23\[185] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_22\[186] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_21\[187] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_20\[188] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_19\[189] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_18\[190] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_17\[191] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_16\[192] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_15\[193] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_14\[194] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_13\[195] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_12\[196] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_11\[197] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_10\[198] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_9\[199] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_8\[200] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_7\[201] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_6\[202] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_5\[203] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_4\[204] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_3\[205] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_2\[206] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_1\[207] = \PWM_1:PWMUDB:MODIN3_1\[208]
Removing Lhs of wire \PWM_1:PWMUDB:MODIN3_1\[208] = \PWM_1:PWMUDB:dith_count_1\[61]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:a_0\[209] = \PWM_1:PWMUDB:MODIN3_0\[210]
Removing Lhs of wire \PWM_1:PWMUDB:MODIN3_0\[210] = \PWM_1:PWMUDB:dith_count_0\[63]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[342] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[343] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__PW1_1_net_0[352] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__PW1_2_net_0[358] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__chA1_net_0[364] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__chA2_net_0[370] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:ctrl_enable\[390] = \PWM_2:PWMUDB:control_7\[382]
Removing Lhs of wire \PWM_2:PWMUDB:hwCapture\[400] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:hwEnable\[401] = \PWM_2:PWMUDB:control_7\[382]
Removing Lhs of wire \PWM_2:PWMUDB:trig_out\[405] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:runmode_enable\\R\[407] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:runmode_enable\\S\[408] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:final_enable\[409] = \PWM_2:PWMUDB:runmode_enable\[406]
Removing Lhs of wire \PWM_2:PWMUDB:ltch_kill_reg\\R\[413] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:ltch_kill_reg\\S\[414] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:min_kill_reg\\R\[415] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:min_kill_reg\\S\[416] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:final_kill\[419] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:add_vi_vv_MODGEN_3_1\[423] = \PWM_2:PWMUDB:MODULE_3:g2:a0:s_1\[664]
Removing Lhs of wire \PWM_2:PWMUDB:add_vi_vv_MODGEN_3_0\[425] = \PWM_2:PWMUDB:MODULE_3:g2:a0:s_0\[665]
Removing Lhs of wire \PWM_2:PWMUDB:dith_count_1\\R\[426] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:dith_count_1\\S\[427] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:dith_count_0\\R\[428] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:dith_count_0\\S\[429] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:reset\[432] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:status_6\[433] = zero[2]
Removing Rhs of wire \PWM_2:PWMUDB:status_5\[434] = \PWM_2:PWMUDB:final_kill_reg\[449]
Removing Lhs of wire \PWM_2:PWMUDB:status_4\[435] = zero[2]
Removing Rhs of wire \PWM_2:PWMUDB:status_3\[436] = \PWM_2:PWMUDB:fifo_full\[456]
Removing Rhs of wire \PWM_2:PWMUDB:status_1\[438] = \PWM_2:PWMUDB:cmp2_status_reg\[448]
Removing Rhs of wire \PWM_2:PWMUDB:status_0\[439] = \PWM_2:PWMUDB:cmp1_status_reg\[447]
Removing Lhs of wire \PWM_2:PWMUDB:cmp1_status_reg\\R\[450] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:cmp1_status_reg\\S\[451] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:cmp2_status_reg\\R\[452] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:cmp2_status_reg\\S\[453] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:final_kill_reg\\R\[454] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:final_kill_reg\\S\[455] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:cs_addr_2\[457] = \PWM_2:PWMUDB:tc_i\[411]
Removing Lhs of wire \PWM_2:PWMUDB:cs_addr_1\[458] = \PWM_2:PWMUDB:runmode_enable\[406]
Removing Lhs of wire \PWM_2:PWMUDB:cs_addr_0\[459] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:compare1\[492] = \PWM_2:PWMUDB:cmp1_less\[463]
Removing Lhs of wire \PWM_2:PWMUDB:compare2\[493] = \PWM_2:PWMUDB:cmp2_less\[466]
Removing Rhs of wire Net_1726[503] = \PWM_2:PWMUDB:pwm1_i_reg\[496]
Removing Rhs of wire Net_1725[504] = \PWM_2:PWMUDB:pwm2_i_reg\[498]
Removing Lhs of wire \PWM_2:PWMUDB:pwm_temp\[505] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_23\[546] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_22\[547] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_21\[548] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_20\[549] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_19\[550] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_18\[551] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_17\[552] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_16\[553] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_15\[554] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_14\[555] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_13\[556] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_12\[557] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_11\[558] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_10\[559] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_9\[560] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_8\[561] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_7\[562] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_6\[563] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_5\[564] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_4\[565] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_3\[566] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_2\[567] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_1\[568] = \PWM_2:PWMUDB:MODIN4_1\[569]
Removing Lhs of wire \PWM_2:PWMUDB:MODIN4_1\[569] = \PWM_2:PWMUDB:dith_count_1\[422]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:a_0\[570] = \PWM_2:PWMUDB:MODIN4_0\[571]
Removing Lhs of wire \PWM_2:PWMUDB:MODIN4_0\[571] = \PWM_2:PWMUDB:dith_count_0\[424]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[703] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[704] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__PW2_1_net_0[712] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__PW2_2_net_0[718] = tmpOE__LED_net_0[1]
Removing Lhs of wire Net_12[723] = zero[2]
Removing Rhs of wire Net_2024[725] = \Timer_1:Net_55\[726]
Removing Lhs of wire \Timer_1:TimerUDB:ctrl_enable\[742] = \Timer_1:TimerUDB:control_7\[734]
Removing Lhs of wire \Timer_1:TimerUDB:ctrl_cmode_1\[744] = zero[2]
Removing Rhs of wire \Timer_1:TimerUDB:timer_enable\[753] = \Timer_1:TimerUDB:runmode_enable\[765]
Removing Rhs of wire \Timer_1:TimerUDB:run_mode\[754] = \Timer_1:TimerUDB:hwEnable\[755]
Removing Lhs of wire \Timer_1:TimerUDB:run_mode\[754] = \Timer_1:TimerUDB:control_7\[734]
Removing Lhs of wire \Timer_1:TimerUDB:trigger_enable\[757] = tmpOE__LED_net_0[1]
Removing Lhs of wire \Timer_1:TimerUDB:tc_i\[759] = \Timer_1:TimerUDB:status_tc\[756]
Removing Lhs of wire \Timer_1:TimerUDB:capt_fifo_load_int\[764] = \Timer_1:TimerUDB:capt_fifo_load\[752]
Removing Lhs of wire \Timer_1:TimerUDB:status_6\[767] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:status_5\[768] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:status_4\[769] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:status_0\[770] = \Timer_1:TimerUDB:status_tc\[756]
Removing Lhs of wire \Timer_1:TimerUDB:status_1\[771] = \Timer_1:TimerUDB:capt_fifo_load\[752]
Removing Rhs of wire \Timer_1:TimerUDB:status_2\[772] = \Timer_1:TimerUDB:fifo_full\[773]
Removing Rhs of wire \Timer_1:TimerUDB:status_3\[774] = \Timer_1:TimerUDB:fifo_nempty\[775]
Removing Lhs of wire \Timer_1:TimerUDB:cs_addr_2\[777] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:cs_addr_1\[778] = \Timer_1:TimerUDB:trig_reg\[766]
Removing Lhs of wire \Timer_1:TimerUDB:cs_addr_0\[779] = \Timer_1:TimerUDB:per_zero\[758]
Removing Rhs of wire \QuadDec_1:Net_1276\[911] = \QuadDec_1:Cnt8:Net_49\[912]
Removing Rhs of wire \QuadDec_1:Net_1276\[911] = \QuadDec_1:Cnt8:CounterUDB:tc_reg_i\[969]
Removing Lhs of wire \QuadDec_1:Cnt8:Net_89\[914] = \QuadDec_1:Net_1251\[915]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:ctrl_capmode_1\[925] = zero[2]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:ctrl_capmode_0\[926] = zero[2]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:ctrl_enable\[938] = \QuadDec_1:Cnt8:CounterUDB:control_7\[930]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:capt_rising\[940] = zero[2]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:capt_falling\[941] = \QuadDec_1:Cnt8:CounterUDB:prevCapture\[939]
Removing Rhs of wire \QuadDec_1:Net_1260\[945] = \QuadDec_1:bQuadDec:state_2\[1034]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:final_enable\[947] = \QuadDec_1:Cnt8:CounterUDB:control_7\[930]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:counter_enable\[948] = \QuadDec_1:Cnt8:CounterUDB:control_7\[930]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_0\[949] = \QuadDec_1:Cnt8:CounterUDB:cmp_out_status\[950]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_1\[951] = \QuadDec_1:Cnt8:CounterUDB:per_zero\[952]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_2\[953] = \QuadDec_1:Cnt8:CounterUDB:overflow_status\[954]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_3\[955] = \QuadDec_1:Cnt8:CounterUDB:underflow_status\[956]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:status_4\[957] = \QuadDec_1:Cnt8:CounterUDB:hwCapture\[943]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_5\[958] = \QuadDec_1:Cnt8:CounterUDB:fifo_full\[959]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:status_6\[960] = \QuadDec_1:Cnt8:CounterUDB:fifo_nempty\[961]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:overflow\[963] = \QuadDec_1:Cnt8:CounterUDB:per_FF\[964]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:underflow\[965] = \QuadDec_1:Cnt8:CounterUDB:status_1\[951]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:tc_i\[968] = \QuadDec_1:Cnt8:CounterUDB:reload_tc\[946]
Removing Rhs of wire \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\[970] = \QuadDec_1:Cnt8:CounterUDB:cmp_equal\[971]
Removing Rhs of wire \QuadDec_1:Net_1269\[974] = \QuadDec_1:Cnt8:CounterUDB:cmp_out_reg_i\[973]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:dp_dir\[978] = \QuadDec_1:Net_1251\[915]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:cs_addr_2\[979] = \QuadDec_1:Net_1251\[915]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:cs_addr_1\[980] = \QuadDec_1:Cnt8:CounterUDB:count_enable\[977]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:cs_addr_0\[981] = \QuadDec_1:Cnt8:CounterUDB:reload\[944]
Removing Lhs of wire \QuadDec_1:Net_1290\[1010] = \QuadDec_1:Net_1276\[911]
Removing Lhs of wire \QuadDec_1:bQuadDec:index_filt\[1032] = \QuadDec_1:Net_1232\[1033]
Removing Lhs of wire \QuadDec_1:Net_1232\[1033] = tmpOE__LED_net_0[1]
Removing Rhs of wire \QuadDec_1:bQuadDec:error\[1035] = \QuadDec_1:bQuadDec:state_3\[1036]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_0\[1039] = \QuadDec_1:Net_530\[1040]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_1\[1041] = \QuadDec_1:Net_611\[1042]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_2\[1043] = \QuadDec_1:Net_1260\[945]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_3\[1044] = \QuadDec_1:bQuadDec:error\[1035]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_4\[1045] = zero[2]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_5\[1046] = zero[2]
Removing Lhs of wire \QuadDec_1:bQuadDec:status_6\[1047] = zero[2]
Removing Lhs of wire \QuadDec_1:Net_1229\[1052] = tmpOE__LED_net_0[1]
Removing Lhs of wire \QuadDec_1:Net_1272\[1053] = \QuadDec_1:Net_1269\[974]
Removing Rhs of wire \QuadDec_2:Net_1276\[1057] = \QuadDec_2:Cnt8:Net_49\[1058]
Removing Rhs of wire \QuadDec_2:Net_1276\[1057] = \QuadDec_2:Cnt8:CounterUDB:tc_reg_i\[1114]
Removing Lhs of wire \QuadDec_2:Cnt8:Net_89\[1060] = \QuadDec_2:Net_1251\[1061]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:ctrl_capmode_1\[1070] = zero[2]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:ctrl_capmode_0\[1071] = zero[2]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:ctrl_enable\[1083] = \QuadDec_2:Cnt8:CounterUDB:control_7\[1075]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:capt_rising\[1085] = zero[2]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:capt_falling\[1086] = \QuadDec_2:Cnt8:CounterUDB:prevCapture\[1084]
Removing Rhs of wire \QuadDec_2:Net_1260\[1090] = \QuadDec_2:bQuadDec:state_2\[1179]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:final_enable\[1092] = \QuadDec_2:Cnt8:CounterUDB:control_7\[1075]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:counter_enable\[1093] = \QuadDec_2:Cnt8:CounterUDB:control_7\[1075]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_0\[1094] = \QuadDec_2:Cnt8:CounterUDB:cmp_out_status\[1095]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_1\[1096] = \QuadDec_2:Cnt8:CounterUDB:per_zero\[1097]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_2\[1098] = \QuadDec_2:Cnt8:CounterUDB:overflow_status\[1099]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_3\[1100] = \QuadDec_2:Cnt8:CounterUDB:underflow_status\[1101]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:status_4\[1102] = \QuadDec_2:Cnt8:CounterUDB:hwCapture\[1088]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_5\[1103] = \QuadDec_2:Cnt8:CounterUDB:fifo_full\[1104]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:status_6\[1105] = \QuadDec_2:Cnt8:CounterUDB:fifo_nempty\[1106]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:overflow\[1108] = \QuadDec_2:Cnt8:CounterUDB:per_FF\[1109]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:underflow\[1110] = \QuadDec_2:Cnt8:CounterUDB:status_1\[1096]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:tc_i\[1113] = \QuadDec_2:Cnt8:CounterUDB:reload_tc\[1091]
Removing Rhs of wire \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\[1115] = \QuadDec_2:Cnt8:CounterUDB:cmp_equal\[1116]
Removing Rhs of wire \QuadDec_2:Net_1269\[1119] = \QuadDec_2:Cnt8:CounterUDB:cmp_out_reg_i\[1118]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:dp_dir\[1123] = \QuadDec_2:Net_1251\[1061]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:cs_addr_2\[1124] = \QuadDec_2:Net_1251\[1061]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:cs_addr_1\[1125] = \QuadDec_2:Cnt8:CounterUDB:count_enable\[1122]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:cs_addr_0\[1126] = \QuadDec_2:Cnt8:CounterUDB:reload\[1089]
Removing Lhs of wire \QuadDec_2:Net_1290\[1155] = \QuadDec_2:Net_1276\[1057]
Removing Lhs of wire \QuadDec_2:bQuadDec:index_filt\[1177] = \QuadDec_2:Net_1232\[1178]
Removing Lhs of wire \QuadDec_2:Net_1232\[1178] = tmpOE__LED_net_0[1]
Removing Rhs of wire \QuadDec_2:bQuadDec:error\[1180] = \QuadDec_2:bQuadDec:state_3\[1181]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_0\[1184] = \QuadDec_2:Net_530\[1185]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_1\[1186] = \QuadDec_2:Net_611\[1187]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_2\[1188] = \QuadDec_2:Net_1260\[1090]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_3\[1189] = \QuadDec_2:bQuadDec:error\[1180]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_4\[1190] = zero[2]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_5\[1191] = zero[2]
Removing Lhs of wire \QuadDec_2:bQuadDec:status_6\[1192] = zero[2]
Removing Lhs of wire \QuadDec_2:Net_1229\[1197] = tmpOE__LED_net_0[1]
Removing Lhs of wire \QuadDec_2:Net_1272\[1198] = \QuadDec_2:Net_1269\[1119]
Removing Lhs of wire tmpOE__chB1_net_0[1201] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__chB2_net_0[1207] = tmpOE__LED_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\[1212] = tmpOE__LED_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:cmp_vv_vv_MODGEN_1\[1214] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[1554]
Removing Rhs of wire \ADC_SAR_Seq_1:clock\[1215] = \ADC_SAR_Seq_1:Net_3874\[1454]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_5\[1217] = \ADC_SAR_Seq_1:bSAR_SEQ:count_5\[1421]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_4\[1219] = \ADC_SAR_Seq_1:bSAR_SEQ:count_4\[1422]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_3\[1221] = \ADC_SAR_Seq_1:bSAR_SEQ:count_3\[1423]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_2\[1223] = \ADC_SAR_Seq_1:bSAR_SEQ:count_2\[1424]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_1\[1225] = \ADC_SAR_Seq_1:bSAR_SEQ:count_1\[1425]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_0\[1227] = \ADC_SAR_Seq_1:bSAR_SEQ:count_0\[1426]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_0\[1361] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_2\[1362] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_1\[1363] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_3\[1364] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_1\[1365] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_3\[1366] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_0\[1367] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_2\[1368] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:Net_188\[1369] = \ADC_SAR_Seq_1:clock\[1215]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:soc\[1375] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:tmpOE__ExtVref_net_0\[1401] = tmpOE__LED_net_0[1]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:enable\[1411] = \ADC_SAR_Seq_1:bSAR_SEQ:control_0\[1412]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:load_period\[1413] = \ADC_SAR_Seq_1:bSAR_SEQ:control_1\[1414]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_7\[1427] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_6\[1428] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_5\[1429] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_4\[1430] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_3\[1431] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_2\[1432] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_1\[1433] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[1434] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\[1435]
Removing Rhs of wire Net_6416[1442] = \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[1434]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_5\[1465] = \ADC_SAR_Seq_1:MODIN1_5\[1466]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_5\[1466] = \ADC_SAR_Seq_1:ch_addr_5\[1217]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_4\[1467] = \ADC_SAR_Seq_1:MODIN1_4\[1468]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_4\[1468] = \ADC_SAR_Seq_1:ch_addr_4\[1219]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_3\[1469] = \ADC_SAR_Seq_1:MODIN1_3\[1470]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_3\[1470] = \ADC_SAR_Seq_1:ch_addr_3\[1221]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_2\[1471] = \ADC_SAR_Seq_1:MODIN1_2\[1472]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_2\[1472] = \ADC_SAR_Seq_1:ch_addr_2\[1223]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_1\[1473] = \ADC_SAR_Seq_1:MODIN1_1\[1474]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_1\[1474] = \ADC_SAR_Seq_1:ch_addr_1\[1225]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_0\[1475] = \ADC_SAR_Seq_1:MODIN1_0\[1476]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_0\[1476] = \ADC_SAR_Seq_1:ch_addr_0\[1227]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_5\[1477] = \ADC_SAR_Seq_1:MODIN2_5\[1478]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_5\[1478] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1216]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_4\[1479] = \ADC_SAR_Seq_1:MODIN2_4\[1480]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_4\[1480] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1218]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_3\[1481] = \ADC_SAR_Seq_1:MODIN2_3\[1482]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_3\[1482] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1220]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_2\[1483] = \ADC_SAR_Seq_1:MODIN2_2\[1484]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_2\[1484] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1222]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_1\[1485] = \ADC_SAR_Seq_1:MODIN2_1\[1486]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_1\[1486] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1224]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_0\[1487] = \ADC_SAR_Seq_1:MODIN2_0\[1488]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_0\[1488] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1226]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_5\[1489] = \ADC_SAR_Seq_1:ch_addr_5\[1217]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_4\[1490] = \ADC_SAR_Seq_1:ch_addr_4\[1219]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_3\[1491] = \ADC_SAR_Seq_1:ch_addr_3\[1221]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_2\[1492] = \ADC_SAR_Seq_1:ch_addr_2\[1223]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_1\[1493] = \ADC_SAR_Seq_1:ch_addr_1\[1225]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_0\[1494] = \ADC_SAR_Seq_1:ch_addr_0\[1227]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_5\[1495] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1216]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_4\[1496] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1218]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_3\[1497] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1220]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_2\[1498] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1222]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_1\[1499] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1224]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_0\[1500] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1226]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_5\[1501] = \ADC_SAR_Seq_1:ch_addr_5\[1217]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_4\[1502] = \ADC_SAR_Seq_1:ch_addr_4\[1219]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_3\[1503] = \ADC_SAR_Seq_1:ch_addr_3\[1221]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_2\[1504] = \ADC_SAR_Seq_1:ch_addr_2\[1223]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_1\[1505] = \ADC_SAR_Seq_1:ch_addr_1\[1225]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_0\[1506] = \ADC_SAR_Seq_1:ch_addr_0\[1227]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_5\[1507] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[1216]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_4\[1508] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[1218]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_3\[1509] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[1220]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_2\[1510] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[1222]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_1\[1511] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[1224]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_0\[1512] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[1226]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\[1519] = tmpOE__LED_net_0[1]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_0\[1520] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\[1518]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eqi_0\[1526] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\[1525]
Removing Rhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[1554] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_1\[1527]
Removing Lhs of wire tmpOE__Sensor2_net_0[1566] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__Sensor3_net_0[1572] = tmpOE__LED_net_0[1]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_0\[1582] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_2\[1583] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_1\[1584] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_3\[1585] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_1\[1586] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_3\[1587] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_0\[1588] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_2\[1589] = zero[2]
Removing Rhs of wire \ADC_SAR_1:Net_188\[1592] = \ADC_SAR_1:Net_221\[1593]
Removing Lhs of wire \ADC_SAR_1:soc\[1598] = zero[2]
Removing Lhs of wire \ADC_SAR_1:tmpOE__ExtVref_net_0\[1623] = tmpOE__LED_net_0[1]
Removing Lhs of wire \ADC_SAR_1:Net_381\[1629] = zero[2]
Removing Lhs of wire tmpOE__Sensor4_net_0[1631] = tmpOE__LED_net_0[1]
Removing Lhs of wire tmpOE__Sensor5_net_0[1637] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:Net_61\[1644] = \UART_1:Net_9\[1643]
Removing Lhs of wire \UART_1:BUART:HalfDuplexSend\[1649] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalParityType_1\[1650] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalParityType_0\[1651] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_2\[1652] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_1\[1653] = zero[2]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_0\[1654] = zero[2]
Removing Rhs of wire Net_6580[1661] = \UART_1:BUART:rx_interrupt_out\[1662]
Removing Lhs of wire \UART_1:BUART:rx_count7_bit8_wire\[1716] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_4_1\[1724] = \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_1\[1735]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_4_0\[1726] = \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_0\[1736]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_5\[1727] = \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\[1752]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_6\[1728] = \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:lta_0\[1766]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:a_1\[1729] = \UART_1:BUART:sRX:s23Poll:MODIN5_1\[1730]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_1\[1730] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:a_0\[1731] = \UART_1:BUART:sRX:s23Poll:MODIN5_0\[1732]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_0\[1732] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_0\[1738] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_0\[1739] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\[1740] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN6_1\[1741] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\[1742] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN6_0\[1743] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\[1744] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\[1745] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\[1746] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\[1747] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\[1748] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\[1749] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newa_1\[1754] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN7_1\[1755] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newa_0\[1756] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN7_0\[1757] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newb_1\[1758] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:newb_0\[1759] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:dataa_1\[1760] = \UART_1:BUART:pollcount_1\[1722]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:dataa_0\[1761] = \UART_1:BUART:pollcount_0\[1725]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:datab_1\[1762] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:datab_0\[1763] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_status_1\[1770] = zero[2]
Removing Rhs of wire \UART_1:BUART:rx_status_2\[1771] = \UART_1:BUART:rx_parity_error_status\[1772]
Removing Rhs of wire \UART_1:BUART:rx_status_3\[1773] = \UART_1:BUART:rx_stop_bit_error\[1774]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_7\[1784] = \UART_1:BUART:sRX:MODULE_7:g2:a0:lta_0\[1833]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_8\[1788] = \UART_1:BUART:sRX:MODULE_8:g1:a0:xneq\[1855]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_6\[1789] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_5\[1790] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_4\[1791] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_3\[1792] = \UART_1:BUART:sRX:MODIN8_6\[1793]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_6\[1793] = \UART_1:BUART:rx_count_6\[1711]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_2\[1794] = \UART_1:BUART:sRX:MODIN8_5\[1795]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_5\[1795] = \UART_1:BUART:rx_count_5\[1712]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_1\[1796] = \UART_1:BUART:sRX:MODIN8_4\[1797]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_4\[1797] = \UART_1:BUART:rx_count_4\[1713]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newa_0\[1798] = \UART_1:BUART:sRX:MODIN8_3\[1799]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN8_3\[1799] = \UART_1:BUART:rx_count_3\[1714]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_6\[1800] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_5\[1801] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_4\[1802] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_3\[1803] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_2\[1804] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_1\[1805] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:newb_0\[1806] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_6\[1807] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_5\[1808] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_4\[1809] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_3\[1810] = \UART_1:BUART:rx_count_6\[1711]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_2\[1811] = \UART_1:BUART:rx_count_5\[1712]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_1\[1812] = \UART_1:BUART:rx_count_4\[1713]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:dataa_0\[1813] = \UART_1:BUART:rx_count_3\[1714]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_6\[1814] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_5\[1815] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_4\[1816] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_3\[1817] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_2\[1818] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_1\[1819] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_7:g2:a0:datab_0\[1820] = zero[2]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:newa_0\[1835] = \UART_1:BUART:rx_postpoll\[1670]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:newb_0\[1836] = \UART_1:BUART:rx_parity_bit\[1787]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:dataa_0\[1837] = \UART_1:BUART:rx_postpoll\[1670]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:datab_0\[1838] = \UART_1:BUART:rx_parity_bit\[1787]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:a_0\[1839] = \UART_1:BUART:rx_postpoll\[1670]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:b_0\[1840] = \UART_1:BUART:rx_parity_bit\[1787]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:aeqb_0\[1842] = tmpOE__LED_net_0[1]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:eq_0\[1843] = \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:xnor_array_0\[1841]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:eqi_0\[1844] = \UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:xnor_array_0\[1841]
Removing Lhs of wire tmpOE__Rx_1_net_0[1866] = tmpOE__LED_net_0[1]
Removing Lhs of wire \USBUART:tmpOE__Dm_net_0\[1873] = tmpOE__LED_net_0[1]
Removing Lhs of wire \USBUART:tmpOE__Dp_net_0\[1880] = tmpOE__LED_net_0[1]
Removing Rhs of wire Net_6608[1933] = \Timer_2:Net_55\[1934]
Removing Lhs of wire \Timer_2:TimerUDB:ctrl_enable\[1951] = \Timer_2:TimerUDB:control_7\[1943]
Removing Lhs of wire \Timer_2:TimerUDB:ctrl_cmode_1\[1953] = zero[2]
Removing Rhs of wire \Timer_2:TimerUDB:timer_enable\[1962] = \Timer_2:TimerUDB:runmode_enable\[1974]
Removing Rhs of wire \Timer_2:TimerUDB:run_mode\[1963] = \Timer_2:TimerUDB:hwEnable_reg\[1964]
Removing Lhs of wire \Timer_2:TimerUDB:trigger_enable\[1966] = tmpOE__LED_net_0[1]
Removing Lhs of wire \Timer_2:TimerUDB:tc_i\[1968] = \Timer_2:TimerUDB:status_tc\[1965]
Removing Lhs of wire \Timer_2:TimerUDB:hwEnable\[1970] = \Timer_2:TimerUDB:control_7\[1943]
Removing Lhs of wire \Timer_2:TimerUDB:capt_fifo_load_int\[1973] = \Timer_2:TimerUDB:capt_fifo_load\[1961]
Removing Lhs of wire Net_6607[1975] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:status_6\[1978] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:status_5\[1979] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:status_4\[1980] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:status_0\[1981] = \Timer_2:TimerUDB:status_tc\[1965]
Removing Lhs of wire \Timer_2:TimerUDB:status_1\[1982] = \Timer_2:TimerUDB:capt_fifo_load\[1961]
Removing Rhs of wire \Timer_2:TimerUDB:status_2\[1983] = \Timer_2:TimerUDB:fifo_full\[1984]
Removing Rhs of wire \Timer_2:TimerUDB:status_3\[1985] = \Timer_2:TimerUDB:fifo_nempty\[1986]
Removing Lhs of wire \Timer_2:TimerUDB:cs_addr_2\[1988] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:cs_addr_1\[1989] = \Timer_2:TimerUDB:trig_reg\[1977]
Removing Lhs of wire \Timer_2:TimerUDB:cs_addr_0\[1990] = \Timer_2:TimerUDB:per_zero\[1967]
Removing Lhs of wire \PWM_1:PWMUDB:min_kill_reg\\D\[2169] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:prevCapture\\D\[2170] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:trig_last\\D\[2171] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:ltch_kill_reg\\D\[2174] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_1:PWMUDB:prevCompare1\\D\[2177] = \PWM_1:PWMUDB:cmp1\[81]
Removing Lhs of wire \PWM_1:PWMUDB:prevCompare2\\D\[2178] = \PWM_1:PWMUDB:cmp2\[84]
Removing Lhs of wire \PWM_1:PWMUDB:cmp1_status_reg\\D\[2179] = \PWM_1:PWMUDB:cmp1_status\[82]
Removing Lhs of wire \PWM_1:PWMUDB:cmp2_status_reg\\D\[2180] = \PWM_1:PWMUDB:cmp2_status\[85]
Removing Lhs of wire \PWM_1:PWMUDB:pwm_i_reg\\D\[2182] = \PWM_1:PWMUDB:pwm_i\[134]
Removing Lhs of wire \PWM_1:PWMUDB:pwm1_i_reg\\D\[2183] = \PWM_1:PWMUDB:pwm1_i\[136]
Removing Lhs of wire \PWM_1:PWMUDB:pwm2_i_reg\\D\[2184] = \PWM_1:PWMUDB:pwm2_i\[138]
Removing Lhs of wire \PWM_1:PWMUDB:tc_i_reg\\D\[2185] = \PWM_1:PWMUDB:status_2\[76]
Removing Lhs of wire \PWM_2:PWMUDB:min_kill_reg\\D\[2186] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:prevCapture\\D\[2187] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:trig_last\\D\[2188] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:ltch_kill_reg\\D\[2191] = tmpOE__LED_net_0[1]
Removing Lhs of wire \PWM_2:PWMUDB:prevCompare1\\D\[2194] = \PWM_2:PWMUDB:cmp1\[442]
Removing Lhs of wire \PWM_2:PWMUDB:prevCompare2\\D\[2195] = \PWM_2:PWMUDB:cmp2\[445]
Removing Lhs of wire \PWM_2:PWMUDB:cmp1_status_reg\\D\[2196] = \PWM_2:PWMUDB:cmp1_status\[443]
Removing Lhs of wire \PWM_2:PWMUDB:cmp2_status_reg\\D\[2197] = \PWM_2:PWMUDB:cmp2_status\[446]
Removing Lhs of wire \PWM_2:PWMUDB:pwm_i_reg\\D\[2199] = \PWM_2:PWMUDB:pwm_i\[495]
Removing Lhs of wire \PWM_2:PWMUDB:pwm1_i_reg\\D\[2200] = \PWM_2:PWMUDB:pwm1_i\[497]
Removing Lhs of wire \PWM_2:PWMUDB:pwm2_i_reg\\D\[2201] = \PWM_2:PWMUDB:pwm2_i\[499]
Removing Lhs of wire \PWM_2:PWMUDB:tc_i_reg\\D\[2202] = \PWM_2:PWMUDB:status_2\[437]
Removing Lhs of wire \Timer_1:TimerUDB:capture_last\\D\[2203] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:tc_reg_i\\D\[2204] = \Timer_1:TimerUDB:status_tc\[756]
Removing Lhs of wire \Timer_1:TimerUDB:hwEnable_reg\\D\[2205] = \Timer_1:TimerUDB:control_7\[734]
Removing Lhs of wire \Timer_1:TimerUDB:capture_out_reg_i\\D\[2206] = \Timer_1:TimerUDB:capt_fifo_load\[752]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:prevCapture\\D\[2208] = zero[2]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\\D\[2209] = \QuadDec_1:Cnt8:CounterUDB:overflow\[963]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\\D\[2210] = \QuadDec_1:Cnt8:CounterUDB:status_1\[951]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:tc_reg_i\\D\[2211] = \QuadDec_1:Cnt8:CounterUDB:reload_tc\[946]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:prevCompare\\D\[2212] = \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\[970]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:cmp_out_reg_i\\D\[2213] = \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\[970]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:count_stored_i\\D\[2214] = \QuadDec_1:Net_1203\[976]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:prevCapture\\D\[2223] = zero[2]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\\D\[2224] = \QuadDec_2:Cnt8:CounterUDB:overflow\[1108]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\\D\[2225] = \QuadDec_2:Cnt8:CounterUDB:status_1\[1096]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:tc_reg_i\\D\[2226] = \QuadDec_2:Cnt8:CounterUDB:reload_tc\[1091]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:prevCompare\\D\[2227] = \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\[1115]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:cmp_out_reg_i\\D\[2228] = \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\[1115]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:count_stored_i\\D\[2229] = \QuadDec_2:Net_1203\[1121]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\[2237] = \ADC_SAR_Seq_1:ch_addr_5\[1217]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\[2238] = \ADC_SAR_Seq_1:ch_addr_4\[1219]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\[2239] = \ADC_SAR_Seq_1:ch_addr_3\[1221]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\[2240] = \ADC_SAR_Seq_1:ch_addr_2\[1223]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\[2241] = \ADC_SAR_Seq_1:ch_addr_1\[1225]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\[2242] = \ADC_SAR_Seq_1:ch_addr_0\[1227]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\\D\[2307] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect\[1441]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\\D\[2309] = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\[1438]
Removing Lhs of wire \UART_1:BUART:reset_reg\\D\[2310] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_bitclk\\D\[2316] = \UART_1:BUART:rx_bitclk_pre\[1705]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_pre\\D\[2325] = \UART_1:BUART:rx_parity_error_pre\[1782]
Removing Lhs of wire \UART_1:BUART:rx_break_status\\D\[2326] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:capture_last\\D\[2330] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:hwEnable_reg\\D\[2331] = \Timer_2:TimerUDB:control_7\[1943]
Removing Lhs of wire \Timer_2:TimerUDB:tc_reg_i\\D\[2332] = \Timer_2:TimerUDB:status_tc\[1965]
Removing Lhs of wire \Timer_2:TimerUDB:capture_out_reg_i\\D\[2333] = \Timer_2:TimerUDB:capt_fifo_load\[1961]

------------------------------------------------------
Aliased 0 equations, 509 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__LED_net_0' (cost = 0):
tmpOE__LED_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:cmp1\' (cost = 0):
\PWM_1:PWMUDB:cmp1\ <= (\PWM_1:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:cmp2\' (cost = 0):
\PWM_1:PWMUDB:cmp2\ <= (\PWM_1:PWMUDB:cmp2_less\);

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_1:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \PWM_1:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_1:PWMUDB:dith_count_1\ and \PWM_1:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:cmp1\' (cost = 0):
\PWM_2:PWMUDB:cmp1\ <= (\PWM_2:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:cmp2\' (cost = 0):
\PWM_2:PWMUDB:cmp2\ <= (\PWM_2:PWMUDB:cmp2_less\);

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_2:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:s_0\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:s_0\ <= (not \PWM_2:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_2:PWMUDB:dith_count_1\ and \PWM_2:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\Timer_1:TimerUDB:fifo_load_polarized\' (cost = 0):
\Timer_1:TimerUDB:fifo_load_polarized\ <=  ('0') ;

Note:  Expanding virtual equation for '\Timer_1:TimerUDB:timer_enable\' (cost = 0):
\Timer_1:TimerUDB:timer_enable\ <= (\Timer_1:TimerUDB:control_7\);

Note:  Expanding virtual equation for '\QuadDec_1:Cnt8:CounterUDB:capt_either_edge\' (cost = 0):
\QuadDec_1:Cnt8:CounterUDB:capt_either_edge\ <= (\QuadDec_1:Cnt8:CounterUDB:prevCapture\);

Note:  Expanding virtual equation for '\QuadDec_1:Cnt8:CounterUDB:reload_tc\' (cost = 2):
\QuadDec_1:Cnt8:CounterUDB:reload_tc\ <= (\QuadDec_1:Cnt8:CounterUDB:status_1\
	OR \QuadDec_1:Cnt8:CounterUDB:overflow\);

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:A_j\' (cost = 1):
\QuadDec_1:bQuadDec:A_j\ <= ((\QuadDec_1:bQuadDec:quad_A_delayed_0\ and \QuadDec_1:bQuadDec:quad_A_delayed_1\ and \QuadDec_1:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:A_k\' (cost = 3):
\QuadDec_1:bQuadDec:A_k\ <= ((not \QuadDec_1:bQuadDec:quad_A_delayed_0\ and not \QuadDec_1:bQuadDec:quad_A_delayed_1\ and not \QuadDec_1:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:B_j\' (cost = 1):
\QuadDec_1:bQuadDec:B_j\ <= ((\QuadDec_1:bQuadDec:quad_B_delayed_0\ and \QuadDec_1:bQuadDec:quad_B_delayed_1\ and \QuadDec_1:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:bQuadDec:B_k\' (cost = 3):
\QuadDec_1:bQuadDec:B_k\ <= ((not \QuadDec_1:bQuadDec:quad_B_delayed_0\ and not \QuadDec_1:bQuadDec:quad_B_delayed_1\ and not \QuadDec_1:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_1:Net_1151\' (cost = 0):
\QuadDec_1:Net_1151\ <= (not \QuadDec_1:Net_1251\);

Note:  Expanding virtual equation for '\QuadDec_1:Net_1287\' (cost = 0):
\QuadDec_1:Net_1287\ <= (not \QuadDec_1:Net_1269\);

Note:  Expanding virtual equation for '\QuadDec_2:Cnt8:CounterUDB:capt_either_edge\' (cost = 0):
\QuadDec_2:Cnt8:CounterUDB:capt_either_edge\ <= (\QuadDec_2:Cnt8:CounterUDB:prevCapture\);

Note:  Expanding virtual equation for '\QuadDec_2:Cnt8:CounterUDB:reload_tc\' (cost = 2):
\QuadDec_2:Cnt8:CounterUDB:reload_tc\ <= (\QuadDec_2:Cnt8:CounterUDB:status_1\
	OR \QuadDec_2:Cnt8:CounterUDB:overflow\);

Note:  Expanding virtual equation for '\QuadDec_2:bQuadDec:A_j\' (cost = 1):
\QuadDec_2:bQuadDec:A_j\ <= ((\QuadDec_2:bQuadDec:quad_A_delayed_0\ and \QuadDec_2:bQuadDec:quad_A_delayed_1\ and \QuadDec_2:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_2:bQuadDec:A_k\' (cost = 3):
\QuadDec_2:bQuadDec:A_k\ <= ((not \QuadDec_2:bQuadDec:quad_A_delayed_0\ and not \QuadDec_2:bQuadDec:quad_A_delayed_1\ and not \QuadDec_2:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_2:bQuadDec:B_j\' (cost = 1):
\QuadDec_2:bQuadDec:B_j\ <= ((\QuadDec_2:bQuadDec:quad_B_delayed_0\ and \QuadDec_2:bQuadDec:quad_B_delayed_1\ and \QuadDec_2:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_2:bQuadDec:B_k\' (cost = 3):
\QuadDec_2:bQuadDec:B_k\ <= ((not \QuadDec_2:bQuadDec:quad_B_delayed_0\ and not \QuadDec_2:bQuadDec:quad_B_delayed_1\ and not \QuadDec_2:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\QuadDec_2:Net_1151\' (cost = 0):
\QuadDec_2:Net_1151\ <= (not \QuadDec_2:Net_1251\);

Note:  Expanding virtual equation for '\QuadDec_2:Net_1287\' (cost = 0):
\QuadDec_2:Net_1287\ <= (not \QuadDec_2:Net_1269\);

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_addressmatch\' (cost = 0):
\UART_1:BUART:rx_addressmatch\ <= (\UART_1:BUART:rx_addressmatch2\
	OR \UART_1:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre\' (cost = 1):
\UART_1:BUART:rx_bitclk_pre\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART_1:BUART:rx_bitclk_pre16x\ <= ((not \UART_1:BUART:rx_count_2\ and \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit1\' (cost = 1):
\UART_1:BUART:rx_poll_bit1\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit2\' (cost = 1):
\UART_1:BUART:rx_poll_bit2\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:pollingrange\' (cost = 4):
\UART_1:BUART:pollingrange\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_0\ <= (not \UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ <= (\UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:lta_1\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_3\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_2\' (cost = 1):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_2\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_2\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_2\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_1\' (cost = 2):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_1\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:MODULE_7:g2:a0:gta_1\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_0\' (cost = 8):
\UART_1:BUART:sRX:MODULE_7:g2:a0:lta_0\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\Timer_2:TimerUDB:fifo_load_polarized\' (cost = 0):
\Timer_2:TimerUDB:fifo_load_polarized\ <=  ('0') ;

Note:  Expanding virtual equation for '\Timer_2:TimerUDB:status_tc\' (cost = 3):
\Timer_2:TimerUDB:status_tc\ <= ((\Timer_2:TimerUDB:run_mode\ and \Timer_2:TimerUDB:per_zero\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\PWM_1:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \PWM_1:PWMUDB:dith_count_0\ and \PWM_1:PWMUDB:dith_count_1\)
	OR (not \PWM_1:PWMUDB:dith_count_1\ and \PWM_1:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:s_1\' (cost = 2):
\PWM_2:PWMUDB:MODULE_3:g2:a0:s_1\ <= ((not \PWM_2:PWMUDB:dith_count_0\ and \PWM_2:PWMUDB:dith_count_1\)
	OR (not \PWM_2:PWMUDB:dith_count_1\ and \PWM_2:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\QuadDec_1:Net_1248\' (cost = 2):
\QuadDec_1:Net_1248\ <= ((not \QuadDec_1:Net_1269\ and \QuadDec_1:Net_1276\));

Note:  Expanding virtual equation for '\QuadDec_2:Net_1248\' (cost = 2):
\QuadDec_2:Net_1248\ <= ((not \QuadDec_2:Net_1269\ and \QuadDec_2:Net_1276\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\' (cost = 4):
\UART_1:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ <= ((not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:lta_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_6:g2:a0:lta_0\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_1\' (cost = 2):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:s_1\ <= ((not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:pollcount_1\)
	OR (not \UART_1:BUART:pollcount_1\ and \UART_1:BUART:pollcount_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Virtual signal \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_postpoll\' (cost = 72):
\UART_1:BUART:rx_postpoll\ <= (\UART_1:BUART:pollcount_1\
	OR (Net_6515 and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_6515 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_6515 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_1:BUART:sRX:MODULE_8:g1:a0:gx:u0:aeqb_1\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_6515 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_6515 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 125 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \PWM_1:PWMUDB:final_capture\ to zero
Aliasing \PWM_1:PWMUDB:pwm_i\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_2:PWMUDB:final_capture\ to zero
Aliasing \PWM_2:PWMUDB:pwm_i\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \Timer_1:TimerUDB:capt_fifo_load\ to zero
Aliasing \QuadDec_1:Cnt8:CounterUDB:hwCapture\ to zero
Aliasing \QuadDec_2:Cnt8:CounterUDB:hwCapture\ to zero
Aliasing \UART_1:BUART:rx_status_0\ to zero
Aliasing \UART_1:BUART:rx_status_6\ to zero
Aliasing \Timer_2:TimerUDB:capt_fifo_load\ to zero
Aliasing \PWM_1:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_2:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \UART_1:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART_1:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART_1:BUART:rx_addr_match_status\\D\ to zero
Removing Lhs of wire \PWM_1:PWMUDB:final_capture\[100] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:pwm_i\[134] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[313] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[323] = zero[2]
Removing Lhs of wire \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[333] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:final_capture\[461] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:pwm_i\[495] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\[674] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\[684] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\[694] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:capt_fifo_load\[752] = zero[2]
Removing Lhs of wire \Timer_1:TimerUDB:trig_reg\[766] = \Timer_1:TimerUDB:control_7\[734]
Removing Lhs of wire \QuadDec_1:Cnt8:CounterUDB:hwCapture\[943] = zero[2]
Removing Lhs of wire \QuadDec_2:Cnt8:CounterUDB:hwCapture\[1088] = zero[2]
Removing Lhs of wire \ADC_SAR_1:Net_188\[1592] = \ADC_SAR_1:Net_376\[1591]
Removing Rhs of wire \UART_1:BUART:rx_bitclk_enable\[1669] = \UART_1:BUART:rx_bitclk\[1717]
Removing Lhs of wire \UART_1:BUART:rx_status_0\[1768] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_status_6\[1777] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:capt_fifo_load\[1961] = zero[2]
Removing Lhs of wire \Timer_2:TimerUDB:trig_reg\[1977] = \Timer_2:TimerUDB:timer_enable\[1962]
Removing Lhs of wire \PWM_1:PWMUDB:runmode_enable\\D\[2172] = \PWM_1:PWMUDB:control_7\[21]
Removing Lhs of wire \PWM_1:PWMUDB:final_kill_reg\\D\[2181] = zero[2]
Removing Lhs of wire \PWM_2:PWMUDB:runmode_enable\\D\[2189] = \PWM_2:PWMUDB:control_7\[382]
Removing Lhs of wire \PWM_2:PWMUDB:final_kill_reg\\D\[2198] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_markspace_status\\D\[2320] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_status\\D\[2321] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_addr_match_status\\D\[2323] = zero[2]
Removing Lhs of wire \UART_1:BUART:rx_markspace_pre\\D\[2324] = \UART_1:BUART:rx_markspace_pre\[1781]
Removing Lhs of wire \UART_1:BUART:rx_parity_bit\\D\[2329] = \UART_1:BUART:rx_parity_bit\[1787]

------------------------------------------------------
Aliased 0 equations, 29 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_1:BUART:sRX:MODULE_8:g1:a0:xneq\ <= ((not \UART_1:BUART:rx_parity_bit\ and Net_6515 and \UART_1:BUART:pollcount_0\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not Net_6515 and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:rx_parity_bit\ and \UART_1:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -dcpsoc3 Design01.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 4s.086ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.3.0.9604, Family: PSoC3, Started at: Thursday, 10 October 2019 14:43:52
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\Group3\PacMan-Robot\301_Group_3_Software\PSOC_code_T1\Workspace01\Design01.cydsn\Design01.cyprj -d CY8C5888LTI-LP097 Design01.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.044ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_1:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_2:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \PWM_1:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_1:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_1:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_1:PWMUDB:pwm_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_2:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_2:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_2:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_2:PWMUDB:pwm_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \Timer_1:TimerUDB:capture_last\ from registered to combinatorial
    Converted constant MacroCell: \Timer_1:TimerUDB:capture_out_reg_i\ from registered to combinatorial
    Converted constant MacroCell: \QuadDec_1:Cnt8:CounterUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \QuadDec_2:Cnt8:CounterUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \Timer_2:TimerUDB:capture_last\ from registered to combinatorial
    Converted constant MacroCell: \Timer_2:TimerUDB:capture_out_reg_i\ from registered to combinatorial
Assigning clock timer_clock to clock BUS_CLK because it is a pass-through
Assigning clock ADC_SAR_Seq_1_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock timer_clock_1 to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_2'. Fanout=6, Signal=Net_3306
    Digital Clock 1: Automatic-assigning  clock 'ADC_SAR_1_theACLK'. Fanout=1, Signal=\ADC_SAR_1:Net_376\
    Digital Clock 2: Automatic-assigning  clock 'Clock_1'. Fanout=2, Signal=Net_1656
    Digital Clock 3: Automatic-assigning  clock 'ADC_SAR_Seq_1_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_1:clock\
    Digital Clock 4: Automatic-assigning  clock 'UART_1_IntClock'. Fanout=1, Signal=\UART_1:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \PWM_1:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \PWM_2:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \Timer_1:TimerUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
    UDB Clk/Enable \Timer_1:TimerUDB:sCTRLReg:SyncCtl:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:Cnt8:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:Cnt8:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_1:bQuadDec:CtrlClkEn\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_2:Cnt8:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_2:Cnt8:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \QuadDec_2:bQuadDec:CtrlClkEn\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \UART_1:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \Timer_2:TimerUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
    UDB Clk/Enable \Timer_2:TimerUDB:sCTRLReg:SyncCtl:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 1 pin(s) will be assigned a location by the fitter: \ADC_SAR_1:ExtVref(0)\


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \QuadDec_2:Net_1269\, Duplicate of \QuadDec_2:Cnt8:CounterUDB:prevCompare\ 
    MacroCell: Name=\QuadDec_2:Net_1269\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_2:Net_1269\ (fanout=2)

    Removing \QuadDec_1:Net_1269\, Duplicate of \QuadDec_1:Cnt8:CounterUDB:prevCompare\ 
    MacroCell: Name=\QuadDec_1:Net_1269\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Net_1269\ (fanout=2)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_1:BUART:rx_parity_bit\, Duplicate of \UART_1:BUART:rx_state_1\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:rx_address_detected\, Duplicate of \UART_1:BUART:rx_state_1\ 
    MacroCell: Name=\UART_1:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_1:BUART:rx_parity_error_pre\, Duplicate of \UART_1:BUART:rx_state_1\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_markspace_pre\, Duplicate of \UART_1:BUART:rx_state_1\ 
    MacroCell: Name=\UART_1:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_markspace_pre\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            pad => LED(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Sensor1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor1(0)__PA ,
            analog_term => Net_6301 ,
            pad => Sensor1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PW1_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PW1_1(0)__PA ,
            input => Net_1671 ,
            pad => PW1_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PW1_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PW1_2(0)__PA ,
            input => Net_543 ,
            pad => PW1_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = chA1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => chA1(0)__PA ,
            fb => Net_3303 ,
            pad => chA1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = chA2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => chA2(0)__PA ,
            fb => Net_3470 ,
            pad => chA2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PW2_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PW2_1(0)__PA ,
            input => Net_1726 ,
            pad => PW2_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PW2_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PW2_2(0)__PA ,
            input => Net_1725 ,
            pad => PW2_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = chB1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => chB1(0)__PA ,
            fb => Net_3304 ,
            pad => chB1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = chB2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => chB2(0)__PA ,
            fb => Net_3471 ,
            pad => chB2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \ADC_SAR_Seq_1:SAR:ExtVref(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ADC_SAR_Seq_1:SAR:ExtVref(0)\__PA ,
            analog_term => \ADC_SAR_Seq_1:SAR:Net_215\ ,
            pad => \ADC_SAR_Seq_1:SAR:ExtVref(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = Sensor2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor2(0)__PA ,
            analog_term => Net_6201 ,
            pad => Sensor2(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Sensor3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor3(0)__PA ,
            analog_term => Net_6202 ,
            pad => Sensor3(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = \ADC_SAR_1:ExtVref(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ADC_SAR_1:ExtVref(0)\__PA ,
            analog_term => \ADC_SAR_1:Net_215\ ,
            pad => \ADC_SAR_1:ExtVref(0)_PAD\ );

    Pin : Name = Sensor4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor4(0)__PA ,
            analog_term => Net_6204 ,
            pad => Sensor4(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Sensor5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor5(0)__PA ,
            analog_term => Net_6205 ,
            pad => Sensor5(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_6515 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \USBUART:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dm(0)\__PA ,
            analog_term => \USBUART:Net_597\ ,
            pad => \USBUART:Dm(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \USBUART:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dp(0)\__PA ,
            analog_term => \USBUART:Net_1000\ ,
            pad => \USBUART:Dp(0)_PAD\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\QuadDec_2:Net_1251_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1251_split\ (fanout=1)

    MacroCell: Name=\PWM_1:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:tc_i\
        );
        Output = \PWM_1:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_2:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:tc_i\
        );
        Output = \PWM_2:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\Timer_1:TimerUDB:status_tc\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_1:TimerUDB:control_7\ * \Timer_1:TimerUDB:per_zero\
        );
        Output = \Timer_1:TimerUDB:status_tc\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:reload\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:reload\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:overflow\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_3\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_3\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:control_7\ * 
              !\QuadDec_1:Cnt8:CounterUDB:count_stored_i\ * 
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:count_enable\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_530\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1276\ * \QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_530\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_611\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1276\ * !\QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_611\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:reload\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:reload\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:overflow\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_3\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_3\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:control_7\ * 
              !\QuadDec_2:Cnt8:CounterUDB:count_stored_i\ * 
              \QuadDec_2:Net_1203\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:count_enable\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Net_530\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1276\ * \QuadDec_2:Net_1251\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Net_530\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Net_611\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1276\ * !\QuadDec_2:Net_1251\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Net_611\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_6415 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_6515 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\Timer_2:TimerUDB:status_tc\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_2:TimerUDB:run_mode\ * \Timer_2:TimerUDB:per_zero\
        );
        Output = \Timer_2:TimerUDB:status_tc\ (fanout=1)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3303
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_2\ (fanout=1)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3304
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_2\ (fanout=1)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3470
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_2\ (fanout=1)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3471
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_0\ (fanout=2)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_1\ (fanout=2)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_2\ (fanout=1)

    MacroCell: Name=\PWM_1:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:control_7\
        );
        Output = \PWM_1:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_1:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:cmp1_less\
        );
        Output = \PWM_1:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_1:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:cmp2_less\
        );
        Output = \PWM_1:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\PWM_1:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_1:PWMUDB:prevCompare1\ * \PWM_1:PWMUDB:cmp1_less\
        );
        Output = \PWM_1:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\PWM_1:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_1:PWMUDB:prevCompare2\ * \PWM_1:PWMUDB:cmp2_less\
        );
        Output = \PWM_1:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=Net_1671, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:cmp1_less\
        );
        Output = Net_1671 (fanout=1)

    MacroCell: Name=Net_543, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:cmp2_less\
        );
        Output = Net_543 (fanout=1)

    MacroCell: Name=\PWM_2:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:control_7\
        );
        Output = \PWM_2:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_2:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:cmp1_less\
        );
        Output = \PWM_2:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_2:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:cmp2_less\
        );
        Output = \PWM_2:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\PWM_2:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_2:PWMUDB:prevCompare1\ * \PWM_2:PWMUDB:cmp1_less\
        );
        Output = \PWM_2:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\PWM_2:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_2:PWMUDB:prevCompare2\ * \PWM_2:PWMUDB:cmp2_less\
        );
        Output = \PWM_2:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=Net_1726, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:cmp1_less\
        );
        Output = Net_1726 (fanout=1)

    MacroCell: Name=Net_1725, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:cmp2_less\
        );
        Output = Net_1725 (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1251\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251_split\
        );
        Output = \QuadDec_1:Net_1251\ (fanout=5)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:status_1\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1276\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Net_1276\ (fanout=2)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:prevCompare\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\QuadDec_1:Net_1203\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:Net_1203\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1203\ (fanout=3)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\
            + \QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_filt\ (fanout=7)

    MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\
            + \QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_filt\ (fanout=7)

    MacroCell: Name=\QuadDec_1:Net_1260\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:error\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1260\ (fanout=10)

    MacroCell: Name=\QuadDec_1:bQuadDec:error\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:error\ (fanout=8)

    MacroCell: Name=\QuadDec_1:bQuadDec:state_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_1\ (fanout=7)

    MacroCell: Name=\QuadDec_1:bQuadDec:state_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_0\ (fanout=7)

    MacroCell: Name=\QuadDec_2:Net_1251\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              !\QuadDec_2:bQuadDec:quad_A_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:quad_A_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\
            + \QuadDec_2:Net_1251_split\
        );
        Output = \QuadDec_2:Net_1251\ (fanout=5)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:status_1\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Net_1276\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Net_1276\ (fanout=2)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:prevCompare\ (fanout=3)

    MacroCell: Name=\QuadDec_1:Net_1251_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1251_split\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1203\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\QuadDec_2:Net_1203\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:Net_1203\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1203\ (fanout=3)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_2:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_2:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_2:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_2:bQuadDec:quad_A_filt\
            + \QuadDec_2:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_2:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_2:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_2:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_filt\ (fanout=7)

    MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_2:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_2:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_2:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\
            + \QuadDec_2:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_2:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_2:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_filt\ (fanout=7)

    MacroCell: Name=\QuadDec_2:Net_1260\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:error\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1260\ (fanout=10)

    MacroCell: Name=\QuadDec_2:bQuadDec:error\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:error\ (fanout=8)

    MacroCell: Name=\QuadDec_2:bQuadDec:state_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * \QuadDec_2:bQuadDec:state_1\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:state_1\ (fanout=7)

    MacroCell: Name=\QuadDec_2:bQuadDec:state_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:state_0\ (fanout=7)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_6416, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_6416 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_6416
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_state_1\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_6515
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_6515 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_6515 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_6515
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_6515 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_6515 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_6515
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_6515
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\Timer_2:TimerUDB:run_mode\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_2:TimerUDB:control_7\
        );
        Output = \Timer_2:TimerUDB:run_mode\ (fanout=3)

    MacroCell: Name=\Timer_2:TimerUDB:timer_enable\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_6608 * \Timer_2:TimerUDB:control_7\ * 
              !\Timer_2:TimerUDB:run_mode\ * !\Timer_2:TimerUDB:trig_disable\
            + !Net_6608 * \Timer_2:TimerUDB:control_7\ * 
              !\Timer_2:TimerUDB:per_zero\ * !\Timer_2:TimerUDB:trig_disable\
            + \Timer_2:TimerUDB:control_7\ * !\Timer_2:TimerUDB:timer_enable\ * 
              !\Timer_2:TimerUDB:trig_disable\
        );
        Output = \Timer_2:TimerUDB:timer_enable\ (fanout=6)

    MacroCell: Name=\Timer_2:TimerUDB:trig_disable\, Mode=(T-Register)
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_6608 * \Timer_2:TimerUDB:timer_enable\ * 
              !\Timer_2:TimerUDB:trig_disable\
            + \Timer_2:TimerUDB:timer_enable\ * \Timer_2:TimerUDB:run_mode\ * 
              \Timer_2:TimerUDB:per_zero\ * !\Timer_2:TimerUDB:trig_disable\
        );
        Output = \Timer_2:TimerUDB:trig_disable\ (fanout=2)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\PWM_1:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_1656 ,
            cs_addr_2 => \PWM_1:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_1:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_1:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_1:PWMUDB:tc_i\ ,
            cl1_comb => \PWM_1:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \PWM_1:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\PWM_2:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_1656 ,
            cs_addr_2 => \PWM_2:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_2:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_2:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_2:PWMUDB:tc_i\ ,
            cl1_comb => \PWM_2:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \PWM_2:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u0\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
            chain_out => \Timer_1:TimerUDB:sT24:timerdp:carry0\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \Timer_1:TimerUDB:sT24:timerdp:u1\

    datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u1\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
            chain_in => \Timer_1:TimerUDB:sT24:timerdp:carry0\ ,
            chain_out => \Timer_1:TimerUDB:sT24:timerdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer_1:TimerUDB:sT24:timerdp:u0\
        Next in chain : \Timer_1:TimerUDB:sT24:timerdp:u2\

    datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u2\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
            z0_comb => \Timer_1:TimerUDB:per_zero\ ,
            f0_bus_stat_comb => \Timer_1:TimerUDB:status_3\ ,
            f0_blk_stat_comb => \Timer_1:TimerUDB:status_2\ ,
            chain_in => \Timer_1:TimerUDB:sT24:timerdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer_1:TimerUDB:sT24:timerdp:u1\

    datapathcell: Name =\QuadDec_1:Cnt8:CounterUDB:sC8:counterdp:u0\
        PORT MAP (
            clock => Net_3306 ,
            cs_addr_2 => \QuadDec_1:Net_1251\ ,
            cs_addr_1 => \QuadDec_1:Cnt8:CounterUDB:count_enable\ ,
            cs_addr_0 => \QuadDec_1:Cnt8:CounterUDB:reload\ ,
            z0_comb => \QuadDec_1:Cnt8:CounterUDB:status_1\ ,
            f0_comb => \QuadDec_1:Cnt8:CounterUDB:overflow\ ,
            ce1_comb => \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\ ,
            f0_bus_stat_comb => \QuadDec_1:Cnt8:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \QuadDec_1:Cnt8:CounterUDB:status_5\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\QuadDec_2:Cnt8:CounterUDB:sC8:counterdp:u0\
        PORT MAP (
            clock => Net_3306 ,
            cs_addr_2 => \QuadDec_2:Net_1251\ ,
            cs_addr_1 => \QuadDec_2:Cnt8:CounterUDB:count_enable\ ,
            cs_addr_0 => \QuadDec_2:Cnt8:CounterUDB:reload\ ,
            z0_comb => \QuadDec_2:Cnt8:CounterUDB:status_1\ ,
            f0_comb => \QuadDec_2:Cnt8:CounterUDB:overflow\ ,
            ce1_comb => \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\ ,
            f0_bus_stat_comb => \QuadDec_2:Cnt8:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \QuadDec_2:Cnt8:CounterUDB:status_5\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:rx_state_1\ ,
            cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
            route_si => \UART_1:BUART:rx_postpoll\ ,
            f0_load => \UART_1:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u0\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
            cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
            chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry0\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u1\

    datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u1\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
            cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
            chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry0\ ,
            chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u0\
        Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u2\

    datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u2\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
            cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
            chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry1\ ,
            chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry2\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u1\
        Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u3\

    datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u3\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
            cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
            z0_comb => \Timer_2:TimerUDB:per_zero\ ,
            f0_bus_stat_comb => \Timer_2:TimerUDB:status_3\ ,
            f0_blk_stat_comb => \Timer_2:TimerUDB:status_2\ ,
            chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry2\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u2\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            status_0 => Net_6416 ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\PWM_1:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_1656 ,
            status_3 => \PWM_1:PWMUDB:status_3\ ,
            status_2 => \PWM_1:PWMUDB:status_2\ ,
            status_1 => \PWM_1:PWMUDB:status_1\ ,
            status_0 => \PWM_1:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_2:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_1656 ,
            status_3 => \PWM_2:PWMUDB:status_3\ ,
            status_2 => \PWM_2:PWMUDB:status_2\ ,
            status_1 => \PWM_2:PWMUDB:status_1\ ,
            status_0 => \PWM_2:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\Timer_1:TimerUDB:rstSts:stsreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            status_3 => \Timer_1:TimerUDB:status_3\ ,
            status_2 => \Timer_1:TimerUDB:status_2\ ,
            status_0 => \Timer_1:TimerUDB:status_tc\ ,
            interrupt => Net_2024 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000011"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_1:Cnt8:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            reset => \QuadDec_1:Net_1260\ ,
            clock => Net_3306 ,
            status_6 => \QuadDec_1:Cnt8:CounterUDB:status_6\ ,
            status_5 => \QuadDec_1:Cnt8:CounterUDB:status_5\ ,
            status_3 => \QuadDec_1:Cnt8:CounterUDB:status_3\ ,
            status_2 => \QuadDec_1:Cnt8:CounterUDB:status_2\ ,
            status_1 => \QuadDec_1:Cnt8:CounterUDB:status_1\ ,
            status_0 => \QuadDec_1:Cnt8:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_1:bQuadDec:Stsreg\
        PORT MAP (
            clock => Net_3306 ,
            status_3 => \QuadDec_1:bQuadDec:error\ ,
            status_2 => \QuadDec_1:Net_1260\ ,
            status_1 => \QuadDec_1:Net_611\ ,
            status_0 => \QuadDec_1:Net_530\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0001111"
            cy_md_select = "0001111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_2:Cnt8:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            reset => \QuadDec_2:Net_1260\ ,
            clock => Net_3306 ,
            status_6 => \QuadDec_2:Cnt8:CounterUDB:status_6\ ,
            status_5 => \QuadDec_2:Cnt8:CounterUDB:status_5\ ,
            status_3 => \QuadDec_2:Cnt8:CounterUDB:status_3\ ,
            status_2 => \QuadDec_2:Cnt8:CounterUDB:status_2\ ,
            status_1 => \QuadDec_2:Cnt8:CounterUDB:status_1\ ,
            status_0 => \QuadDec_2:Cnt8:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\QuadDec_2:bQuadDec:Stsreg\
        PORT MAP (
            clock => Net_3306 ,
            status_3 => \QuadDec_2:bQuadDec:error\ ,
            status_2 => \QuadDec_2:Net_1260\ ,
            status_1 => \QuadDec_2:Net_611\ ,
            status_0 => \QuadDec_2:Net_530\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0001111"
            cy_md_select = "0001111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_1:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_5 => \UART_1:BUART:rx_status_5\ ,
            status_4 => \UART_1:BUART:rx_status_4\ ,
            status_3 => \UART_1:BUART:rx_status_3\ ,
            interrupt => Net_6580 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\Timer_2:TimerUDB:rstSts:stsreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            status_3 => \Timer_2:TimerUDB:status_3\ ,
            status_2 => \Timer_2:TimerUDB:status_2\ ,
            status_0 => \Timer_2:TimerUDB:status_tc\ ,
            interrupt => Net_6608 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000011"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_1:nrq\ ,
            out => \ADC_SAR_Seq_1:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\PWM_1:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_1656 ,
            control_7 => \PWM_1:PWMUDB:control_7\ ,
            control_6 => \PWM_1:PWMUDB:control_6\ ,
            control_5 => \PWM_1:PWMUDB:control_5\ ,
            control_4 => \PWM_1:PWMUDB:control_4\ ,
            control_3 => \PWM_1:PWMUDB:control_3\ ,
            control_2 => \PWM_1:PWMUDB:control_2\ ,
            control_1 => \PWM_1:PWMUDB:control_1\ ,
            control_0 => \PWM_1:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_2:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_1656 ,
            control_7 => \PWM_2:PWMUDB:control_7\ ,
            control_6 => \PWM_2:PWMUDB:control_6\ ,
            control_5 => \PWM_2:PWMUDB:control_5\ ,
            control_4 => \PWM_2:PWMUDB:control_4\ ,
            control_3 => \PWM_2:PWMUDB:control_3\ ,
            control_2 => \PWM_2:PWMUDB:control_2\ ,
            control_1 => \PWM_2:PWMUDB:control_1\ ,
            control_0 => \PWM_2:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\Timer_1:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            control_7 => \Timer_1:TimerUDB:control_7\ ,
            control_6 => \Timer_1:TimerUDB:control_6\ ,
            control_5 => \Timer_1:TimerUDB:control_5\ ,
            control_4 => \Timer_1:TimerUDB:control_4\ ,
            control_3 => \Timer_1:TimerUDB:control_3\ ,
            control_2 => \Timer_1:TimerUDB:control_2\ ,
            control_1 => \Timer_1:TimerUDB:control_1\ ,
            control_0 => \Timer_1:TimerUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\QuadDec_1:Cnt8:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_3306 ,
            control_7 => \QuadDec_1:Cnt8:CounterUDB:control_7\ ,
            control_6 => \QuadDec_1:Cnt8:CounterUDB:control_6\ ,
            control_5 => \QuadDec_1:Cnt8:CounterUDB:control_5\ ,
            control_4 => \QuadDec_1:Cnt8:CounterUDB:control_4\ ,
            control_3 => \QuadDec_1:Cnt8:CounterUDB:control_3\ ,
            control_2 => \QuadDec_1:Cnt8:CounterUDB:control_2\ ,
            control_1 => \QuadDec_1:Cnt8:CounterUDB:control_1\ ,
            control_0 => \QuadDec_1:Cnt8:CounterUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\QuadDec_2:Cnt8:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_3306 ,
            control_7 => \QuadDec_2:Cnt8:CounterUDB:control_7\ ,
            control_6 => \QuadDec_2:Cnt8:CounterUDB:control_6\ ,
            control_5 => \QuadDec_2:Cnt8:CounterUDB:control_5\ ,
            control_4 => \QuadDec_2:Cnt8:CounterUDB:control_4\ ,
            control_3 => \QuadDec_2:Cnt8:CounterUDB:control_3\ ,
            control_2 => \QuadDec_2:Cnt8:CounterUDB:control_2\ ,
            control_1 => \QuadDec_2:Cnt8:CounterUDB:control_1\ ,
            control_0 => \QuadDec_2:Cnt8:CounterUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\Timer_2:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            control_7 => \Timer_2:TimerUDB:control_7\ ,
            control_6 => \Timer_2:TimerUDB:control_6\ ,
            control_5 => \Timer_2:TimerUDB:control_5\ ,
            control_4 => \Timer_2:TimerUDB:control_4\ ,
            control_3 => \Timer_2:TimerUDB:control_3\ ,
            control_2 => \Timer_2:TimerUDB:control_2\ ,
            control_1 => \Timer_2:TimerUDB:control_1\ ,
            control_0 => \Timer_2:TimerUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

    count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            load => \UART_1:BUART:rx_counter_load\ ,
            count_6 => \UART_1:BUART:rx_count_6\ ,
            count_5 => \UART_1:BUART:rx_count_5\ ,
            count_4 => \UART_1:BUART:rx_count_4\ ,
            count_3 => \UART_1:BUART:rx_count_3\ ,
            count_2 => \UART_1:BUART:rx_count_2\ ,
            count_1 => \UART_1:BUART:rx_count_1\ ,
            count_0 => \UART_1:BUART:rx_count_0\ ,
            tc => \UART_1:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_2024 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_6416 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_6409 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_6605 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_2
        PORT MAP (
            interrupt => Net_6580 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_3
        PORT MAP (
            interrupt => Net_6608 );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    5 :    3 :    8 : 62.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :   13 :   19 :   32 : 40.63 %
IO                            :   22 :   26 :   48 : 45.83 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  166 :   26 :  192 : 86.46 %
  Unique P-terms              :  236 :  148 :  384 : 61.46 %
  Total P-terms               :  246 :      :      :        
  Datapath Cells              :   12 :   12 :   24 : 50.00 %
  Status Cells                :   13 :   11 :   24 : 54.17 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    9 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    9 :   15 :   24 : 37.50 %
    Control Registers         :    7 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.164ms
Tech mapping phase: Elapsed time ==> 0s.212ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_6419" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6421" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6422" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6424" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6426" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6427" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6429" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6431" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6432" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6434" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6436" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6437" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6439" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6441" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6442" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6444" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6446" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6447" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6449" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6451" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6452" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6454" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6456" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6457" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6459" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6461" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6462" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6464" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6466" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6467" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6469" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6471" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6472" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6474" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6476" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6477" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6479" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6481" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6482" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6484" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6486" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6487" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6489" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6491" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6492" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6493" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6494" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6495" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6496" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6497" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6498" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6499" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6500" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6501" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6502" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6503" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6504" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6505" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6506" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6507" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : PW1_1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : PW1_2(0) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : PW2_1(0) (fixed)
IO_6@[IOP=(2)][IoId=(6)] : PW2_2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Rx_1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : Sensor1(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : Sensor2(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : Sensor3(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : Sensor4(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : Sensor5(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : \ADC_SAR_Seq_1:SAR:ExtVref(0)\ (fixed, SAR-ExtVref)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
IO_1@[IOP=(0)][IoId=(1)] : chA1(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : chA2(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : chB1(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : chB2(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\ (fixed, SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ADC_SAR_1:ExtVref(0)\ (fixed, SAR-ExtVref)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_1:ADC_SAR\ (fixed, SAR-ExtVref)
USB[0]@[FFB(USB,0)] : \USBUART:USB\
Analog Placement Results:
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : PW1_1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : PW1_2(0) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : PW2_1(0) (fixed)
IO_6@[IOP=(2)][IoId=(6)] : PW2_2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : Rx_1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : Sensor1(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : Sensor2(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : Sensor3(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : Sensor4(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : Sensor5(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : \ADC_SAR_Seq_1:SAR:ExtVref(0)\ (fixed, SAR-ExtVref)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
IO_1@[IOP=(0)][IoId=(1)] : chA1(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : chA2(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : chB1(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : chB2(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\ (fixed, SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ADC_SAR_1:ExtVref(0)\ (fixed, SAR-ExtVref)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_1:ADC_SAR\ (fixed, SAR-ExtVref)
USB[0]@[FFB(USB,0)] : \USBUART:USB\

Analog Placement phase: Elapsed time ==> 0s.055ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "AmuxEye::\ADC_SAR_Seq_1:AMuxHw_2\" overuses wire "GPIO P1[7] Sw__1b"
Net "AmuxEye::\ADC_SAR_Seq_1:AMuxHw_2\" overuses wire "GPIO P1[7] Wire"
Net "AmuxNose::\ADC_SAR_Seq_1:AMuxHw_2\" overuses wire "GPIO P1[7] Sw__1b"
Net "AmuxNose::\ADC_SAR_Seq_1:AMuxHw_2\" overuses wire "GPIO P1[7] Wire"
Analog Routing phase: Elapsed time ==> 0s.022ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq_1:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_6201 {
    p1_6
  }
  Net: Net_6202 {
    p1_7
  }
  Net: Net_6204 {
    p0_7
  }
  Net: Net_6205 {
    p0_6
  }
  Net: Net_6419 {
  }
  Net: Net_6421 {
  }
  Net: Net_6422 {
  }
  Net: Net_6424 {
  }
  Net: Net_6426 {
  }
  Net: Net_6427 {
  }
  Net: Net_6429 {
  }
  Net: Net_6431 {
  }
  Net: Net_6432 {
  }
  Net: Net_6434 {
  }
  Net: Net_6436 {
  }
  Net: Net_6437 {
  }
  Net: Net_6439 {
  }
  Net: Net_6441 {
  }
  Net: Net_6442 {
  }
  Net: Net_6444 {
  }
  Net: Net_6446 {
  }
  Net: Net_6447 {
  }
  Net: Net_6449 {
  }
  Net: Net_6451 {
  }
  Net: Net_6452 {
  }
  Net: Net_6454 {
  }
  Net: Net_6456 {
  }
  Net: Net_6457 {
  }
  Net: Net_6459 {
  }
  Net: Net_6461 {
  }
  Net: Net_6462 {
  }
  Net: Net_6464 {
  }
  Net: Net_6466 {
  }
  Net: Net_6467 {
  }
  Net: Net_6469 {
  }
  Net: Net_6471 {
  }
  Net: Net_6472 {
  }
  Net: Net_6474 {
  }
  Net: Net_6476 {
  }
  Net: Net_6477 {
  }
  Net: Net_6479 {
  }
  Net: Net_6481 {
  }
  Net: Net_6482 {
  }
  Net: Net_6484 {
  }
  Net: Net_6486 {
  }
  Net: Net_6487 {
  }
  Net: Net_6489 {
  }
  Net: Net_6491 {
  }
  Net: Net_6492 {
  }
  Net: Net_6493 {
  }
  Net: Net_6494 {
  }
  Net: Net_6495 {
  }
  Net: Net_6496 {
  }
  Net: Net_6497 {
  }
  Net: Net_6498 {
  }
  Net: Net_6499 {
  }
  Net: Net_6500 {
  }
  Net: Net_6501 {
  }
  Net: Net_6502 {
  }
  Net: Net_6503 {
  }
  Net: Net_6504 {
  }
  Net: Net_6505 {
  }
  Net: Net_6506 {
  }
  Net: Net_6507 {
  }
  Net: Net_6301 {
    sar_1_vplus
    agr1_x_sar_1_vplus
    agr1
    agr1_x_p1_5
    p1_5
  }
  Net: \ADC_SAR_1:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_1:Net_215\ {
    p0_2
    p0_2_exvref
  }
  Net: \ADC_SAR_1:Net_248\ {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_215\ {
    p0_4
    p0_4_exvref
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_248\ {
  }
  Net: AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\ {
    sar_0_vplus
    agl3_x_sar_0_vplus
    agl3
    agl3_x_agr3
    agr3
    agr3_x_p1_7
    agl2_x_sar_0_vplus
    agl2
    agl2_x_agr2
    agr2
    agr2_x_p1_6
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_7
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_6
    p1_7
    p1_6
    p0_7
    p0_6
  }
}
Map of item to net {
  sar_1_vplus                                      -> Net_6301
  agr1_x_sar_1_vplus                               -> Net_6301
  agr1                                             -> Net_6301
  agr1_x_p1_5                                      -> Net_6301
  p1_5                                             -> Net_6301
  sar_1_vrefhi                                     -> \ADC_SAR_1:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_1:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_1:Net_126\
  p0_2                                             -> \ADC_SAR_1:Net_215\
  p0_2_exvref                                      -> \ADC_SAR_1:Net_215\
  sar_0_vrefhi                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  p0_4                                             -> \ADC_SAR_Seq_1:SAR:Net_215\
  p0_4_exvref                                      -> \ADC_SAR_Seq_1:SAR:Net_215\
  sar_0_vplus                                      -> \ADC_SAR_Seq_1:Net_2803\
  p1_6                                             -> Net_6201
  p1_7                                             -> Net_6202
  p0_7                                             -> Net_6204
  p0_6                                             -> Net_6205
  agl3_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3_x_agr3                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agr3                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agr3_x_p1_7                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl2_x_agr2                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agr2                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agr2_x_p1_6                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl6_x_p0_6                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq_1:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_1:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_6201
      Outer: agr2_x_p1_6
      Inner: agl2_x_sar_0_vplus
      Path {
        p1_6
        agr2_x_p1_6
        agr2
        agl2_x_agr2
        agl2
        agl2_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_6202
      Outer: agr3_x_p1_7
      Inner: agl3_x_sar_0_vplus
      Path {
        p1_7
        agr3_x_p1_7
        agr3
        agl3_x_agr3
        agl3
        agl3_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_6204
      Outer: agl7_x_p0_7
      Inner: agl7_x_sar_0_vplus
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_6205
      Outer: agl6_x_p0_6
      Inner: agl6_x_sar_0_vplus
      Path {
        p0_6
        agl6_x_p0_6
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_6419
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_6421
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_6422
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_6424
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_6426
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_6427
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_6429
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_6431
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_6432
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_6434
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_6436
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_6437
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_6439
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_6441
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_6442
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_6444
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_6446
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_6447
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_6449
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_6451
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_6452
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_6454
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_6456
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_6457
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_6459
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_6461
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_6462
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_6464
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_6466
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_6467
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_6469
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_6471
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_6472
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_6474
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_6476
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_6477
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_6479
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_6481
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_6482
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_6484
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_6486
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_6487
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_6489
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_6491
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_6492
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_6493
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_6494
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_6495
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_6496
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_6497
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_6498
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_6499
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_6500
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_6501
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_6502
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_6503
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_6504
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_6505
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_6506
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_6507
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.288ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.8 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   48 :    0 :   48 : 100.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.35
                   Pterms :            5.04
               Macrocells :            3.46
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.002ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.132ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.001ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 1470, final cost is 1470 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :      11.46 :       6.92
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=4, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=Net_6416, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_6416 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_1:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:tc_i\
        );
        Output = \PWM_1:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=5, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_1726, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:cmp1_less\
        );
        Output = Net_1726 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_2:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:control_7\
        );
        Output = \PWM_2:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_2:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:tc_i\
        );
        Output = \PWM_2:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_1725, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:runmode_enable\ * \PWM_2:PWMUDB:cmp2_less\
        );
        Output = Net_1725 (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\PWM_2:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_1656 ,
        control_7 => \PWM_2:PWMUDB:control_7\ ,
        control_6 => \PWM_2:PWMUDB:control_6\ ,
        control_5 => \PWM_2:PWMUDB:control_5\ ,
        control_4 => \PWM_2:PWMUDB:control_4\ ,
        control_3 => \PWM_2:PWMUDB:control_3\ ,
        control_2 => \PWM_2:PWMUDB:control_2\ ,
        control_1 => \PWM_2:PWMUDB:control_1\ ,
        control_0 => \PWM_2:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=2, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:overflow\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_state_1\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_state_1\ (fanout=8)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=2, #inputs=4, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3470
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:count_enable\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:control_7\ * 
              !\QuadDec_1:Cnt8:CounterUDB:count_stored_i\ * 
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:count_enable\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_2:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_1656 ,
        cs_addr_2 => \PWM_2:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_2:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_2:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_2:PWMUDB:tc_i\ ,
        cl1_comb => \PWM_2:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \PWM_2:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\QuadDec_1:Cnt8:CounterUDB:sCTRLReg:ctrlreg\
    PORT MAP (
        clock => Net_3306 ,
        control_7 => \QuadDec_1:Cnt8:CounterUDB:control_7\ ,
        control_6 => \QuadDec_1:Cnt8:CounterUDB:control_6\ ,
        control_5 => \QuadDec_1:Cnt8:CounterUDB:control_5\ ,
        control_4 => \QuadDec_1:Cnt8:CounterUDB:control_4\ ,
        control_3 => \QuadDec_1:Cnt8:CounterUDB:control_3\ ,
        control_2 => \QuadDec_1:Cnt8:CounterUDB:control_2\ ,
        control_1 => \QuadDec_1:Cnt8:CounterUDB:control_1\ ,
        control_0 => \QuadDec_1:Cnt8:CounterUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:overflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:status_1\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_3\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:prevCompare\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:prevCompare\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u1\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
        cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
        chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry0\ ,
        chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u0\
    Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u2\

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u2\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
        cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
        chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry1\ ,
        chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry2\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u1\
    Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u3\

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        status_0 => Net_6416 ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=9, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_6416
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:reload\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:reload\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_2:Net_530\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1276\ * \QuadDec_2:Net_1251\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Net_530\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_2:Net_611\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1276\ * !\QuadDec_2:Net_1251\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Net_611\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=3, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:status_1\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:Net_1276\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Net_1276\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3471
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_0\ (fanout=2)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_1:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_1656 ,
        cs_addr_2 => \PWM_1:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_1:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_1:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_1:PWMUDB:tc_i\ ,
        cl1_comb => \PWM_1:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \PWM_1:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\PWM_1:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_1656 ,
        status_3 => \PWM_1:PWMUDB:status_3\ ,
        status_2 => \PWM_1:PWMUDB:status_2\ ,
        status_1 => \PWM_1:PWMUDB:status_1\ ,
        status_0 => \PWM_1:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\PWM_1:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_1656 ,
        control_7 => \PWM_1:PWMUDB:control_7\ ,
        control_6 => \PWM_1:PWMUDB:control_6\ ,
        control_5 => \PWM_1:PWMUDB:control_5\ ,
        control_4 => \PWM_1:PWMUDB:control_4\ ,
        control_3 => \PWM_1:PWMUDB:control_3\ ,
        control_2 => \PWM_1:PWMUDB:control_2\ ,
        control_1 => \PWM_1:PWMUDB:control_1\ ,
        control_0 => \PWM_1:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1251\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251_split\
        );
        Output = \QuadDec_1:Net_1251\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_2\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Net_1203\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:Net_1203\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1203\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_filt\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_2:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_2:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_2:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\
            + \QuadDec_2:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_2:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_2:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_filt\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:state_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_0\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_B_delayed_1\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_2:bQuadDec:quad_B_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:count_stored_i\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1203\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:count_stored_i\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\QuadDec_2:bQuadDec:Stsreg\
    PORT MAP (
        clock => Net_3306 ,
        status_3 => \QuadDec_2:bQuadDec:error\ ,
        status_2 => \QuadDec_2:Net_1260\ ,
        status_1 => \QuadDec_2:Net_611\ ,
        status_0 => \QuadDec_2:Net_530\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0001111"
        cy_md_select = "0001111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:Net_1251\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              !\QuadDec_2:bQuadDec:quad_A_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:quad_A_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\
            + \QuadDec_2:Net_1251_split\
        );
        Output = \QuadDec_2:Net_1251\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:Net_1203\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:Net_1203\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1203\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:status_0\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,2)][LB=1] #macrocells=1, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_1251_split\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:Net_1260\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:Net_1251\ * \QuadDec_1:bQuadDec:quad_B_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1251_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u0\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
        cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
        chain_out => \Timer_2:TimerUDB:sT32:timerdp:carry0\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \Timer_2:TimerUDB:sT32:timerdp:u1\

statusicell: Name =\QuadDec_1:Cnt8:CounterUDB:sSTSReg:stsreg\
    PORT MAP (
        reset => \QuadDec_1:Net_1260\ ,
        clock => Net_3306 ,
        status_6 => \QuadDec_1:Cnt8:CounterUDB:status_6\ ,
        status_5 => \QuadDec_1:Cnt8:CounterUDB:status_5\ ,
        status_3 => \QuadDec_1:Cnt8:CounterUDB:status_3\ ,
        status_2 => \QuadDec_1:Cnt8:CounterUDB:status_2\ ,
        status_1 => \QuadDec_1:Cnt8:CounterUDB:status_1\ ,
        status_0 => \QuadDec_1:Cnt8:CounterUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=9, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:Net_530\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1276\ * \QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_530\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_6515 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_6515 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_6515 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_6515
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=6, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\Timer_2:TimerUDB:status_tc\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_2:TimerUDB:run_mode\ * \Timer_2:TimerUDB:per_zero\
        );
        Output = \Timer_2:TimerUDB:status_tc\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Timer_2:TimerUDB:timer_enable\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_6608 * \Timer_2:TimerUDB:control_7\ * 
              !\Timer_2:TimerUDB:run_mode\ * !\Timer_2:TimerUDB:trig_disable\
            + !Net_6608 * \Timer_2:TimerUDB:control_7\ * 
              !\Timer_2:TimerUDB:per_zero\ * !\Timer_2:TimerUDB:trig_disable\
            + \Timer_2:TimerUDB:control_7\ * !\Timer_2:TimerUDB:timer_enable\ * 
              !\Timer_2:TimerUDB:trig_disable\
        );
        Output = \Timer_2:TimerUDB:timer_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Timer_2:TimerUDB:trig_disable\, Mode=(T-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_6608 * \Timer_2:TimerUDB:timer_enable\ * 
              !\Timer_2:TimerUDB:trig_disable\
            + \Timer_2:TimerUDB:timer_enable\ * \Timer_2:TimerUDB:run_mode\ * 
              \Timer_2:TimerUDB:per_zero\ * !\Timer_2:TimerUDB:trig_disable\
        );
        Output = \Timer_2:TimerUDB:trig_disable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Timer_2:TimerUDB:run_mode\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_2:TimerUDB:control_7\
        );
        Output = \Timer_2:TimerUDB:run_mode\ (fanout=3)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_2:TimerUDB:sT32:timerdp:u3\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_2:TimerUDB:timer_enable\ ,
        cs_addr_0 => \Timer_2:TimerUDB:per_zero\ ,
        z0_comb => \Timer_2:TimerUDB:per_zero\ ,
        f0_bus_stat_comb => \Timer_2:TimerUDB:status_3\ ,
        f0_blk_stat_comb => \Timer_2:TimerUDB:status_2\ ,
        chain_in => \Timer_2:TimerUDB:sT32:timerdp:carry2\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer_2:TimerUDB:sT32:timerdp:u2\

statusicell: Name =\Timer_2:TimerUDB:rstSts:stsreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        status_3 => \Timer_2:TimerUDB:status_3\ ,
        status_2 => \Timer_2:TimerUDB:status_2\ ,
        status_0 => \Timer_2:TimerUDB:status_tc\ ,
        interrupt => Net_6608 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000011"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\Timer_2:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        control_7 => \Timer_2:TimerUDB:control_7\ ,
        control_6 => \Timer_2:TimerUDB:control_6\ ,
        control_5 => \Timer_2:TimerUDB:control_5\ ,
        control_4 => \Timer_2:TimerUDB:control_4\ ,
        control_3 => \Timer_2:TimerUDB:control_3\ ,
        control_2 => \Timer_2:TimerUDB:control_2\ ,
        control_1 => \Timer_2:TimerUDB:control_1\ ,
        control_0 => \Timer_2:TimerUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_6515 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_6515
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:count_enable\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:control_7\ * 
              !\QuadDec_2:Cnt8:CounterUDB:count_stored_i\ * 
              \QuadDec_2:Net_1203\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:count_enable\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:Cnt8:CounterUDB:reload\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Cnt8:CounterUDB:reload\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:Net_1276\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\QuadDec_1:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_1:Cnt8:CounterUDB:overflow\
        );
        Output = \QuadDec_1:Net_1276\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:count_stored_i\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Net_1203\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:count_stored_i\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\QuadDec_1:Cnt8:CounterUDB:sC8:counterdp:u0\
    PORT MAP (
        clock => Net_3306 ,
        cs_addr_2 => \QuadDec_1:Net_1251\ ,
        cs_addr_1 => \QuadDec_1:Cnt8:CounterUDB:count_enable\ ,
        cs_addr_0 => \QuadDec_1:Cnt8:CounterUDB:reload\ ,
        z0_comb => \QuadDec_1:Cnt8:CounterUDB:status_1\ ,
        f0_comb => \QuadDec_1:Cnt8:CounterUDB:overflow\ ,
        ce1_comb => \QuadDec_1:Cnt8:CounterUDB:cmp_out_i\ ,
        f0_bus_stat_comb => \QuadDec_1:Cnt8:CounterUDB:status_6\ ,
        f0_blk_stat_comb => \QuadDec_1:Cnt8:CounterUDB:status_5\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\QuadDec_2:Cnt8:CounterUDB:sCTRLReg:ctrlreg\
    PORT MAP (
        clock => Net_3306 ,
        control_7 => \QuadDec_2:Cnt8:CounterUDB:control_7\ ,
        control_6 => \QuadDec_2:Cnt8:CounterUDB:control_6\ ,
        control_5 => \QuadDec_2:Cnt8:CounterUDB:control_5\ ,
        control_4 => \QuadDec_2:Cnt8:CounterUDB:control_4\ ,
        control_3 => \QuadDec_2:Cnt8:CounterUDB:control_3\ ,
        control_2 => \QuadDec_2:Cnt8:CounterUDB:control_2\ ,
        control_1 => \QuadDec_2:Cnt8:CounterUDB:control_1\ ,
        control_0 => \QuadDec_2:Cnt8:CounterUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_6515
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:rx_state_1\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_6515
            + !\UART_1:BUART:rx_state_1\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        load => \UART_1:BUART:rx_counter_load\ ,
        count_6 => \UART_1:BUART:rx_count_6\ ,
        count_5 => \UART_1:BUART:rx_count_5\ ,
        count_4 => \UART_1:BUART:rx_count_4\ ,
        count_3 => \UART_1:BUART:rx_count_3\ ,
        count_2 => \UART_1:BUART:rx_count_2\ ,
        count_1 => \UART_1:BUART:rx_count_1\ ,
        count_0 => \UART_1:BUART:rx_count_0\ ,
        tc => \UART_1:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_1:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:control_7\
        );
        Output = \PWM_1:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_2:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:cmp2_less\
        );
        Output = \PWM_2:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_2:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_2:PWMUDB:prevCompare1\ * \PWM_2:PWMUDB:cmp1_less\
        );
        Output = \PWM_2:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:overflow\ * 
              !\QuadDec_2:Cnt8:CounterUDB:overflow_reg_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_2:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_2:PWMUDB:prevCompare2\ * \PWM_2:PWMUDB:cmp2_less\
        );
        Output = \PWM_2:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_2:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_2:PWMUDB:cmp1_less\
        );
        Output = \PWM_2:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_3\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:status_1\ * 
              !\QuadDec_2:Cnt8:CounterUDB:underflow_reg_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u0\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
        chain_out => \Timer_1:TimerUDB:sT24:timerdp:carry0\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \Timer_1:TimerUDB:sT24:timerdp:u1\

statusicell: Name =\PWM_2:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_1656 ,
        status_3 => \PWM_2:PWMUDB:status_3\ ,
        status_2 => \PWM_2:PWMUDB:status_2\ ,
        status_1 => \PWM_2:PWMUDB:status_1\ ,
        status_0 => \PWM_2:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=2, #inputs=6, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:bQuadDec:error\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:error\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:bQuadDec:state_1\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * \QuadDec_2:bQuadDec:state_1\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:state_1\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:Net_1260\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:error\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1260\ (fanout=10)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:prevCompare\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:prevCompare\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Net_1260\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:error\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:Net_1260\ (fanout=10)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_1:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_5 => \UART_1:BUART:rx_status_5\ ,
        status_4 => \UART_1:BUART:rx_status_4\ ,
        status_3 => \UART_1:BUART:rx_status_3\ ,
        interrupt => Net_6580 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=1, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:Net_1251_split\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:Net_1260\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + \QuadDec_2:Net_1251\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              !\QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:Net_1251_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=2, #inputs=8, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:Cnt8:CounterUDB:status_0\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\ * 
              !\QuadDec_2:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_2:Cnt8:CounterUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:error\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * !\QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * \QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:error\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\QuadDec_2:Cnt8:CounterUDB:sC8:counterdp:u0\
    PORT MAP (
        clock => Net_3306 ,
        cs_addr_2 => \QuadDec_2:Net_1251\ ,
        cs_addr_1 => \QuadDec_2:Cnt8:CounterUDB:count_enable\ ,
        cs_addr_0 => \QuadDec_2:Cnt8:CounterUDB:reload\ ,
        z0_comb => \QuadDec_2:Cnt8:CounterUDB:status_1\ ,
        f0_comb => \QuadDec_2:Cnt8:CounterUDB:overflow\ ,
        ce1_comb => \QuadDec_2:Cnt8:CounterUDB:cmp_out_i\ ,
        f0_bus_stat_comb => \QuadDec_2:Cnt8:CounterUDB:status_6\ ,
        f0_blk_stat_comb => \QuadDec_2:Cnt8:CounterUDB:status_5\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\QuadDec_2:Cnt8:CounterUDB:sSTSReg:stsreg\
    PORT MAP (
        reset => \QuadDec_2:Net_1260\ ,
        clock => Net_3306 ,
        status_6 => \QuadDec_2:Cnt8:CounterUDB:status_6\ ,
        status_5 => \QuadDec_2:Cnt8:CounterUDB:status_5\ ,
        status_3 => \QuadDec_2:Cnt8:CounterUDB:status_3\ ,
        status_2 => \QuadDec_2:Cnt8:CounterUDB:status_2\ ,
        status_1 => \QuadDec_2:Cnt8:CounterUDB:status_1\ ,
        status_0 => \QuadDec_2:Cnt8:CounterUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=9, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_filt\, Mode=(T-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_A_filt\
            + \QuadDec_1:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_filt\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_1\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:Net_611\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:Net_1276\ * !\QuadDec_1:Net_1251\ * 
              !\QuadDec_1:Cnt8:CounterUDB:prevCompare\
        );
        Output = \QuadDec_1:Net_611\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:bQuadDec:state_0\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              \QuadDec_2:bQuadDec:state_1\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              !\QuadDec_2:bQuadDec:error\ * \QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:Net_1260\ * \QuadDec_2:bQuadDec:quad_B_filt\ * 
              \QuadDec_2:bQuadDec:error\ * !\QuadDec_2:bQuadDec:state_1\ * 
              !\QuadDec_2:bQuadDec:state_0\
            + !\QuadDec_2:bQuadDec:quad_A_filt\ * 
              \QuadDec_2:bQuadDec:quad_B_filt\ * !\QuadDec_2:bQuadDec:error\ * 
              !\QuadDec_2:bQuadDec:state_1\ * !\QuadDec_2:bQuadDec:state_0\
        );
        Output = \QuadDec_2:bQuadDec:state_0\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:state_1\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              \QuadDec_1:bQuadDec:state_0\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:error\ * \QuadDec_1:bQuadDec:state_1\
            + !\QuadDec_1:Net_1260\ * \QuadDec_1:bQuadDec:quad_A_filt\ * 
              \QuadDec_1:bQuadDec:error\ * !\QuadDec_1:bQuadDec:state_1\ * 
              !\QuadDec_1:bQuadDec:state_0\
            + \QuadDec_1:bQuadDec:quad_A_filt\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\ * !\QuadDec_1:bQuadDec:error\ * 
              !\QuadDec_1:bQuadDec:state_1\ * !\QuadDec_1:bQuadDec:state_0\
        );
        Output = \QuadDec_1:bQuadDec:state_1\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statusicell: Name =\QuadDec_1:bQuadDec:Stsreg\
    PORT MAP (
        clock => Net_3306 ,
        status_3 => \QuadDec_1:bQuadDec:error\ ,
        status_2 => \QuadDec_1:Net_1260\ ,
        status_1 => \QuadDec_1:Net_611\ ,
        status_0 => \QuadDec_1:Net_530\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0001111"
        cy_md_select = "0001111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=3, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_filt\, Mode=(T-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_2:bQuadDec:quad_A_delayed_0\ * 
              !\QuadDec_2:bQuadDec:quad_A_delayed_1\ * 
              !\QuadDec_2:bQuadDec:quad_A_delayed_2\ * 
              \QuadDec_2:bQuadDec:quad_A_filt\
            + \QuadDec_2:bQuadDec:quad_A_delayed_0\ * 
              \QuadDec_2:bQuadDec:quad_A_delayed_1\ * 
              \QuadDec_2:bQuadDec:quad_A_delayed_2\ * 
              !\QuadDec_2:bQuadDec:quad_A_filt\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_filt\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_2:bQuadDec:quad_A_delayed_2\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_2:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_2:bQuadDec:quad_A_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_6515 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=6, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_B_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_filt\, Mode=(T-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              !\QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              \QuadDec_1:bQuadDec:quad_B_filt\
            + \QuadDec_1:bQuadDec:quad_B_delayed_0\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_1\ * 
              \QuadDec_1:bQuadDec:quad_B_delayed_2\ * 
              !\QuadDec_1:bQuadDec:quad_B_filt\
        );
        Output = \QuadDec_1:bQuadDec:quad_B_filt\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_2\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_1\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \QuadDec_1:bQuadDec:quad_A_delayed_0\
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_1\ (fanout=2)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:rx_state_1\ ,
        cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
        route_si => \UART_1:BUART:rx_postpoll\ ,
        f0_load => \UART_1:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_543, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:cmp2_less\
        );
        Output = Net_543 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_1671, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:runmode_enable\ * \PWM_1:PWMUDB:cmp1_less\
        );
        Output = Net_1671 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Timer_1:TimerUDB:status_tc\, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer_1:TimerUDB:control_7\ * \Timer_1:TimerUDB:per_zero\
        );
        Output = \Timer_1:TimerUDB:status_tc\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_1:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_1:PWMUDB:prevCompare1\ * \PWM_1:PWMUDB:cmp1_less\
        );
        Output = \PWM_1:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\PWM_1:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:cmp1_less\
        );
        Output = \PWM_1:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_1:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_1:PWMUDB:cmp2_less\
        );
        Output = \PWM_1:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_1:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_1656) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_1:PWMUDB:prevCompare2\ * \PWM_1:PWMUDB:cmp2_less\
        );
        Output = \PWM_1:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u1\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
        chain_in => \Timer_1:TimerUDB:sT24:timerdp:carry0\ ,
        chain_out => \Timer_1:TimerUDB:sT24:timerdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer_1:TimerUDB:sT24:timerdp:u0\
    Next in chain : \Timer_1:TimerUDB:sT24:timerdp:u2\

statusicell: Name =\Timer_1:TimerUDB:rstSts:stsreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        status_3 => \Timer_1:TimerUDB:status_3\ ,
        status_2 => \Timer_1:TimerUDB:status_2\ ,
        status_0 => \Timer_1:TimerUDB:status_tc\ ,
        interrupt => Net_2024 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000011"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer_1:TimerUDB:sT24:timerdp:u2\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer_1:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer_1:TimerUDB:per_zero\ ,
        z0_comb => \Timer_1:TimerUDB:per_zero\ ,
        f0_bus_stat_comb => \Timer_1:TimerUDB:status_3\ ,
        f0_blk_stat_comb => \Timer_1:TimerUDB:status_2\ ,
        chain_in => \Timer_1:TimerUDB:sT24:timerdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer_1:TimerUDB:sT24:timerdp:u1\

controlcell: Name =\Timer_1:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        control_7 => \Timer_1:TimerUDB:control_7\ ,
        control_6 => \Timer_1:TimerUDB:control_6\ ,
        control_5 => \Timer_1:TimerUDB:control_5\ ,
        control_4 => \Timer_1:TimerUDB:control_4\ ,
        control_3 => \Timer_1:TimerUDB:control_3\ ,
        control_2 => \Timer_1:TimerUDB:control_2\ ,
        control_1 => \Timer_1:TimerUDB:control_1\ ,
        control_0 => \Timer_1:TimerUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_1:nrq\ ,
        out => \ADC_SAR_Seq_1:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=4, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_6415 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_A_delayed_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3303
        );
        Output = \QuadDec_1:bQuadDec:quad_A_delayed_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\QuadDec_1:bQuadDec:quad_B_delayed_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_3306) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3304
        );
        Output = \QuadDec_1:bQuadDec:quad_B_delayed_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_6409 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_6416 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_2024 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(6)] 
    interrupt: Name =isr_2
        PORT MAP (
            interrupt => Net_6580 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(7)] 
    interrupt: Name =isr_3
        PORT MAP (
            interrupt => Net_6608 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_6605 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = chB1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => chB1(0)__PA ,
        fb => Net_3304 ,
        pad => chB1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = chA1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => chA1(0)__PA ,
        fb => Net_3303 ,
        pad => chA1(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \ADC_SAR_1:ExtVref(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \ADC_SAR_1:ExtVref(0)\__PA ,
        analog_term => \ADC_SAR_1:Net_215\ ,
        pad => \ADC_SAR_1:ExtVref(0)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \ADC_SAR_Seq_1:SAR:ExtVref(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \ADC_SAR_Seq_1:SAR:ExtVref(0)\__PA ,
        analog_term => \ADC_SAR_Seq_1:SAR:Net_215\ ,
        pad => \ADC_SAR_Seq_1:SAR:ExtVref(0)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Sensor5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor5(0)__PA ,
        analog_term => Net_6205 ,
        pad => Sensor5(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Sensor4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor4(0)__PA ,
        analog_term => Net_6204 ,
        pad => Sensor4(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=2]: 
Pin : Name = chB2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => chB2(0)__PA ,
        fb => Net_3471 ,
        pad => chB2(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = chA2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => chA2(0)__PA ,
        fb => Net_3470 ,
        pad => chA2(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Sensor1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor1(0)__PA ,
        analog_term => Net_6301 ,
        pad => Sensor1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Sensor2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor2(0)__PA ,
        analog_term => Net_6201 ,
        pad => Sensor2(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Sensor3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor3(0)__PA ,
        analog_term => Net_6202 ,
        pad => Sensor3(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(0)__PA ,
        pad => LED(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_6515 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = PW2_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PW2_1(0)__PA ,
        input => Net_1726 ,
        pad => PW2_1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = PW2_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PW2_2(0)__PA ,
        input => Net_1725 ,
        pad => PW2_2(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = PW1_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PW1_1(0)__PA ,
        input => Net_1671 ,
        pad => PW1_1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = PW1_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PW1_2(0)__PA ,
        input => Net_543 ,
        pad => PW1_2(0)_PAD );
    Properties:
    {
    }

Port 12 is empty
Port 15 generates interrupt for logical port:
    logicalport: Name =\USBUART:Dp\
        PORT MAP (
            in_clock_en => tmpOE__LED_net_0 ,
            in_reset => zero ,
            out_clock_en => tmpOE__LED_net_0 ,
            out_reset => zero ,
            interrupt => \USBUART:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "2b269b96-47a4-4e9a-937e-76d4080bb211/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=6]: 
Pin : Name = \USBUART:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dp(0)\__PA ,
        analog_term => \USBUART:Net_1000\ ,
        pad => \USBUART:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBUART:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dm(0)\__PA ,
        analog_term => \USBUART:Net_597\ ,
        pad => \USBUART:Dm(0)_PAD\ );
    Properties:
    {
    }

CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_3306 ,
            dclk_0 => Net_3306_local ,
            dclk_glb_1 => \ADC_SAR_1:Net_376\ ,
            dclk_1 => \ADC_SAR_1:Net_376_local\ ,
            dclk_glb_2 => Net_1656 ,
            dclk_2 => Net_1656_local ,
            dclk_glb_3 => \ADC_SAR_Seq_1:clock\ ,
            dclk_3 => \ADC_SAR_Seq_1:clock_local\ ,
            dclk_glb_4 => \UART_1:Net_9\ ,
            dclk_4 => \UART_1:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBUART:USB\
        PORT MAP (
            dp => \USBUART:Net_1000\ ,
            dm => \USBUART:Net_597\ ,
            sof_int => Net_6605 ,
            arb_int => \USBUART:Net_1889\ ,
            usb_int => \USBUART:Net_1876\ ,
            ept_int_8 => \USBUART:ep_int_8\ ,
            ept_int_7 => \USBUART:ep_int_7\ ,
            ept_int_6 => \USBUART:ep_int_6\ ,
            ept_int_5 => \USBUART:ep_int_5\ ,
            ept_int_4 => \USBUART:ep_int_4\ ,
            ept_int_3 => \USBUART:ep_int_3\ ,
            ept_int_2 => \USBUART:ep_int_2\ ,
            ept_int_1 => \USBUART:ep_int_1\ ,
            ept_int_0 => \USBUART:ep_int_0\ ,
            ord_int => \USBUART:Net_95\ ,
            dma_req_7 => \USBUART:dma_request_7\ ,
            dma_req_6 => \USBUART:dma_request_6\ ,
            dma_req_5 => \USBUART:dma_request_5\ ,
            dma_req_4 => \USBUART:dma_request_4\ ,
            dma_req_3 => \USBUART:dma_request_3\ ,
            dma_req_2 => \USBUART:dma_request_2\ ,
            dma_req_1 => \USBUART:dma_request_1\ ,
            dma_req_0 => \USBUART:dma_request_0\ ,
            dma_termin => \USBUART:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: empty
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: empty
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq_1:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_1:Net_2803\ ,
            vminus => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_1:SAR:Net_215\ ,
            vrefhi_out => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq_1:SAR:Net_248\ ,
            clk_udb => \ADC_SAR_Seq_1:clock_local\ ,
            irq => \ADC_SAR_Seq_1:SAR:Net_252\ ,
            next => Net_6415 ,
            data_out_udb_11 => \ADC_SAR_Seq_1:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_1:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_1:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_1:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_1:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_1:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_1:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_1:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_1:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_1:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_1:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_1:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_1:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_1:ADC_SAR\
        PORT MAP (
            vplus => Net_6301 ,
            vminus => \ADC_SAR_1:Net_126\ ,
            ext_pin => \ADC_SAR_1:Net_215\ ,
            vrefhi_out => \ADC_SAR_1:Net_126\ ,
            vref => \ADC_SAR_1:Net_248\ ,
            clk_udb => \ADC_SAR_1:Net_376_local\ ,
            irq => \ADC_SAR_1:Net_252\ ,
            next => Net_6412 ,
            data_out_udb_11 => \ADC_SAR_1:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_1:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_1:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_1:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_1:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_1:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_1:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_1:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_1:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_1:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_1:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_1:Net_207_0\ ,
            eof_udb => Net_6409 );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_1:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_6507 ,
            muxin_62 => Net_6506 ,
            muxin_61 => Net_6505 ,
            muxin_60 => Net_6504 ,
            muxin_59 => Net_6503 ,
            muxin_58 => Net_6502 ,
            muxin_57 => Net_6501 ,
            muxin_56 => Net_6500 ,
            muxin_55 => Net_6499 ,
            muxin_54 => Net_6498 ,
            muxin_53 => Net_6497 ,
            muxin_52 => Net_6496 ,
            muxin_51 => Net_6495 ,
            muxin_50 => Net_6494 ,
            muxin_49 => Net_6493 ,
            muxin_48 => Net_6492 ,
            muxin_47 => Net_6491 ,
            muxin_46 => Net_6489 ,
            muxin_45 => Net_6487 ,
            muxin_44 => Net_6486 ,
            muxin_43 => Net_6484 ,
            muxin_42 => Net_6482 ,
            muxin_41 => Net_6481 ,
            muxin_40 => Net_6479 ,
            muxin_39 => Net_6477 ,
            muxin_38 => Net_6476 ,
            muxin_37 => Net_6474 ,
            muxin_36 => Net_6472 ,
            muxin_35 => Net_6471 ,
            muxin_34 => Net_6469 ,
            muxin_33 => Net_6467 ,
            muxin_32 => Net_6466 ,
            muxin_31 => Net_6464 ,
            muxin_30 => Net_6462 ,
            muxin_29 => Net_6461 ,
            muxin_28 => Net_6459 ,
            muxin_27 => Net_6457 ,
            muxin_26 => Net_6456 ,
            muxin_25 => Net_6454 ,
            muxin_24 => Net_6452 ,
            muxin_23 => Net_6451 ,
            muxin_22 => Net_6449 ,
            muxin_21 => Net_6447 ,
            muxin_20 => Net_6446 ,
            muxin_19 => Net_6444 ,
            muxin_18 => Net_6442 ,
            muxin_17 => Net_6441 ,
            muxin_16 => Net_6439 ,
            muxin_15 => Net_6437 ,
            muxin_14 => Net_6436 ,
            muxin_13 => Net_6434 ,
            muxin_12 => Net_6432 ,
            muxin_11 => Net_6431 ,
            muxin_10 => Net_6429 ,
            muxin_9 => Net_6427 ,
            muxin_8 => Net_6426 ,
            muxin_7 => Net_6424 ,
            muxin_6 => Net_6422 ,
            muxin_5 => Net_6421 ,
            muxin_4 => Net_6419 ,
            muxin_3 => Net_6205 ,
            muxin_2 => Net_6204 ,
            muxin_1 => Net_6202 ,
            muxin_0 => Net_6201 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_SAR_Seq_1:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                                | 
Port | Pin | Fixed |      Type |       Drive Mode |                           Name | Connections
-----+-----+-------+-----------+------------------+--------------------------------+-----------------------------------------------------------------
   0 |   0 |     * |      NONE |     HI_Z_DIGITAL |                        chB1(0) | FB(Net_3304)
     |   1 |     * |      NONE |     HI_Z_DIGITAL |                        chA1(0) | FB(Net_3303)
     |   2 |       |      NONE |      HI_Z_ANALOG |         \ADC_SAR_1:ExtVref(0)\ | Analog(\ADC_SAR_1:Net_215\)
     |   4 |     * |      NONE |      HI_Z_ANALOG | \ADC_SAR_Seq_1:SAR:ExtVref(0)\ | Analog(\ADC_SAR_Seq_1:SAR:Net_215\)
     |   6 |     * |      NONE |      HI_Z_ANALOG |                     Sensor5(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_6205)
     |   7 |     * |      NONE |      HI_Z_ANALOG |                     Sensor4(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_6204)
-----+-----+-------+-----------+------------------+--------------------------------+-----------------------------------------------------------------
   1 |   2 |     * |      NONE |     HI_Z_DIGITAL |                        chB2(0) | FB(Net_3471)
     |   4 |     * |      NONE |     HI_Z_DIGITAL |                        chA2(0) | FB(Net_3470)
     |   5 |     * |      NONE |      HI_Z_ANALOG |                     Sensor1(0) | Analog(Net_6301)
     |   6 |     * |      NONE |      HI_Z_ANALOG |                     Sensor2(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_6201)
     |   7 |     * |      NONE |      HI_Z_ANALOG |                     Sensor3(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_6202)
-----+-----+-------+-----------+------------------+--------------------------------+-----------------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT |                         LED(0) | 
     |   2 |     * |      NONE |     HI_Z_DIGITAL |                        Rx_1(0) | FB(Net_6515)
     |   5 |     * |      NONE |         CMOS_OUT |                       PW2_1(0) | In(Net_1726)
     |   6 |     * |      NONE |         CMOS_OUT |                       PW2_2(0) | In(Net_1725)
-----+-----+-------+-----------+------------------+--------------------------------+-----------------------------------------------------------------
   3 |   0 |     * |      NONE |         CMOS_OUT |                       PW1_1(0) | In(Net_1671)
     |   1 |     * |      NONE |         CMOS_OUT |                       PW1_2(0) | In(Net_543)
-----+-----+-------+-----------+------------------+--------------------------------+-----------------------------------------------------------------
  15 |   6 |     * |   FALLING |      HI_Z_ANALOG |                \USBUART:Dp(0)\ | Analog(\USBUART:Net_1000\)
     |   7 |     * |      NONE |      HI_Z_ANALOG |                \USBUART:Dm(0)\ | Analog(\USBUART:Net_597\)
-----------------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.045ms
Digital Placement phase: Elapsed time ==> 4s.586ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 6s.779ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 0s.683ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.040ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Design01_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.969ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.292ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 14s.017ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 14s.047ms
API generation phase: Elapsed time ==> 5s.422ms
Dependency generation phase: Elapsed time ==> 0s.057ms
Cleanup phase: Elapsed time ==> 0s.102ms
